{"version":3,"sources":["icon.js","submenu.js","attach.js","menu.js","search-bar.js","button.js","fields/button-field.js","form-control.js","fields/help-tool-tip.js","fields/form-label.js","fields/common-field.js","fields/display-value-typography.js","fields/boolean-field.js","card.js","fields/component-field.js","flex-break.js","utils.js","fields/field.js","fields/composite-field.js","fields/date-field.js","form.js","fields/form-field.js","form-card-buttons.js","form-card.js","form-dialog.js","confirmation-dialog.js","fields/select-order.js","fields/collection-field.js","fields/list-item-field.js","fields/list-field.js","fields/re-captcha-field.js","fields/autocomplete-select.js","fields/select-field.js","fields/time-field.js","text.js","fields/text-field.js","fields/url-field.js","components.js","component-utils.js","inner-component.js","component.js","snackbar.js","app.js","app-container.js","register-service-worker.js","render.js","demo/components/app.js","demo/components/contact-no-mson.js","demo/components/contacts.js","demo/components/contacts-local-storage.js","demo/components/contacts-firebase.js","demo/components/edit-contact.js","demo/components/fields-screen.js","demo/components/fields.js","demo/components/form-editor.js","demo/components/home.js","demo/components/tasks.js","demo/components/tasks-local-storage.js","demo/components/tasks-firebase.js","field-editor-form.js","demo/app.js","demo/index.js"],"names":["Icon","handleClick","event","_this","props","onClick","svgIconName","snakeCase","_this$props","this","className","icon","iconContents","toFontIconName","react_default","a","createElement","Icon_default","React","PureComponent","Submenu","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","item","items","setState","open","state","onNavigate","onDrawerToggle","childSelected","path","each","_this2","_this$props2","classes","listItems","forEach","index","isSelected","classNames","secondary","push","selected","roles","registrar","client","user","hasRole","hidden","ListItem_default","button","nested","key","ListItemText_default","disableTypography","primary","Typography_default","variant","join","label","_this3","_this$props3","Collapse_default","in","timeout","unmountOnExit","List_default","disablePadding","icon_Icon","withStyles","theme","paddingLeft","spacing","unit","color","palette","text","fontWeight","attach","_watchProps","componentOrName","Component","_React$PureComponent","_class2","wasMounted","getComponent","component","handleFieldChange","name","value","watchProps","indexOf","defineProperty","difference","keys","get","inherits","createClass","prevProps","removeListener","addListener","setInitialState","on","initialState","assign","Menu","handleDrawerToggle","handleNavigate","menuItem","submenus","submenu","mobileOpen","responsive","drawer","drawerHeader","Divider_default","temporaryDrawer","Drawer_default","anchor","direction","paper","drawerPaper","onClose","ModalProps","keepMounted","permanentDrawer","concat","drawPaperResponsive","Hidden_default","mdUp","smDown","implementation","objectSpread","mixins","toolbar","paddingTop","width","breakpoints","up","position","height","withTheme","SearchBar","handleKeyUp","keyCode","globals","set","searchString","onChange","TextField_default","InputProps","disableUnderline","input","textFieldInput","onKeyUp","searchIcon","borderRadius","backgroundColor","fontSize","typography","subtitle1","padding","common","white","top","left","Button","type","disabled","fullWidth","marginTop","Button_default","leftIcon","marginRight","ButtonField","emitClick","src_button","FormControl","children","marginBottom","fullWidthClassName","noMarginBottomClassName","noMarginBottom","FormControl_default","formControl","margin","HelpToolTip","help","Tooltip_default","disableTouchListener","title","IconButton_default","aria-label","FormLabel","shrink","childProps","undefined","noShrink","FormLabel_default","caption","CommonField","fld","required","err","editable","touched","hideLabelUI","hideLabel","useDisplayValue","shrinkLabel","inlineLabel","autoHideLabel","lbl","isBlank","id","getUniqueId","labelText","form_label","htmlFor","error","InputLabel_default","firstErr","getFirstErr","help_tool_tip_HelpToolTip","FormHelperText_default","form_control","DisplayValueTypography","root","display","BooleanField","handleChange","setValue","target","checked","FormControlLabel_default","control","core_Switch_default","display_value_typography","getDisplayValue","common_field","Card","content","Grid_default","container","justify","xs","sm","md","lg","Paper_default","wrap","component_Component","flex","ComponentField","marginLeft","FlexBreak","break","utils","definedProps","Field","block","accessEditable","didCreate","noBlock","getClassName","componentUtils","getUIComponent","Fragment","_Field","getIfDefined","flex_break","CompositeField","fields","lastIsBlock","first","eachField","field","last","fields_field","DateField","handleDateChange","date","handleBlur","setTouched","includeTime","minDate","maxDate","dis","DateTimePicker","DatePicker","MuiPickersUtilsProvider_default","DateFnsUtils","clearable","Form","fieldsCanAccess","handleSave","preventDefault","validate","getErrs","length","submit","turnOnAutoValidate","access","calcFieldsCanAccess","autoValidate","mode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","getFields","Symbol","iterator","next","done","ignoreErrs","return","prevState","adjustAccess","formTag","isLoading","getKey","flds","map","onSubmit","FormField","form","src_form","flexFlow","FormCardButtons","forbidUpdate","forbidDelete","archivedAt","onEdit","onDelete","updateButton","deleteButton","FormCard","handleEdit","handleDelete","form_card_buttons_FormCardButtons","cursor","FormDialog","saveClicked","previousMode","handleClose","withCancelButton","onCancel","currentForm","disableSubmit","onSave","_this$state","disableSave","hasErrorForTouchedField","isOpen","buttons","Dialog_default","aria-labelledby","DialogContent_default","DialogActions_default","withMobileDialog","ConfirmationDialog","yes","alert","aria-describedby","DialogTitle_default","DialogContentText_default","autoFocus","SelectOrder","sortOrder","sortBy","flipped","options","option","MenuItem_default","Select_default","flip","transform","CollectionField","confirmationOpen","handleCancel","handleNew","_callee","regenerator_default","_context","prev","save","stop","_callee2","formToDelete","_context2","getValue","restore","confirmationTitle","handleConfirmationClose","_callee3","_context3","archive","handleOrdering","order","onDragEnd","result","destination","source","moveAndSaveForm","sourceIndex","destinationIndex","canCreate","canUpdate","canArchive","bufferTopId","_infiniteLoader","resizeSpacer","spacerHeight","setSpacerResizing","change","forbidOrder","showArchived","maxGrids","maxColumns","cards","_loop","setEditable","getUniqueItemId","form_card","canDrag","react_beautiful_dnd_esm","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","isDragging","draggableStyle","userSelect","background","getItemStyle","getForms","isDefaultField","numCards","forbidCreate","forbidSort","store","singularLabel","getSingularLabel","reachedMax","showNewButton","canOrder","sortOptions","showOrder","align","select_order","_this$props4","noResults","_this$state2","toLowerCase","spacerStyle","spacerId","cardContainer","droppableId","isDraggingOver","grey","getListStyle","placeholder","showNoRecords","header","spacer","footer","form_dialog","confirmation_dialog_ConfirmationDialog","_this$props5","animation","ListItemField","emit","allowDelete","ListField","createField","autoCreateFields","canDeleteEmpty","hideDeleteButton","fieldIsBlank","list_item_field","ReCAPTCHAField","isEditable","siteKey","captcha","es","sitekey","inputComponent","_ref","inputRef","objectWithoutProperties","components","Control","optionalProps","selectProps","inputProps","innerProps","textFieldProps","square","MultiValue","_classNames","Chip_default","tabIndex","chip","chipFocused","isFocused","isDisabled","removeProps","deleteIcon","NoOptionsMessage","noOptionsMessage","Option","buttonRef","SingleValue","singleValue","ValueContainer","valueContainer","AutoCompleteSelect","isClearable","onBlur","onFocus","onInputChange","isMulti","selectStyles","dropdownIndicator","base","clearIndicator","menuPortal","zIndex","react_select_esm","styles","menuPortalTarget","document","body","minWidth","flexWrap","alignItems","emphasize","SelectField","focus","multiple","val","blankString","opts","Checkbox_default","autocomplete","fieldValue","renderValue","Input_default","chips","getOptionLabel","autocompleteValue","isValueBlank","autocomplete_select","handleAutocompleteChange","handleFocus","renderOptions","displayValue","TimeField","showSeconds","TimePicker_default","seconds","invalidDateMessage","Text","react_markdown_default","TextField","fromUIValue","TextMaskCustom","other","mask","reactTextMask_default","maxLength","multiline","rows","rowsMax","optional","uiValue","getUIValue","URLField","newWindow","href","text_field","src_components","ChainedSelectField","ChainedSelectListField","IdField","IntegerField","MoneyField","NumberField","PhoneField","SelectListField","TextListField","User","component_utils","compiler","isCompiled","Parent","constructor","ancestorName","getOldestCompiledAncestor","Ancestor","InnerComponent","handlerName","charAt","toUpperCase","slice","emitChange","addChangeListener","removeChangeListener","others","definition","newComponent","createComponent","destroy","comp","inner_component_InnerComponent","Snackbar","reason","message","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","action","close","App","snackbarOpen","snackbarMessage","nextMenuItem","showArchivedToggle","showSearch","callback","has","fullScreen","displayConfirmation","asyncToGenerator","mark","force","Action","run","history","_x","_x2","apply","arguments","_ref2","confirmation","_x3","switchContent","_ref3","parameters","isAction","location","menu","parentItem","_this$canArchive","canSearch","emitUnload","route","toRoute","queryString","search","substr","hash","getParent","requireAccess","emitLoad","_x4","_x5","onLocation","pathname","handleSnackbarClose","handleArchivedChange","window","scrollTo","handleSearchStringChange","setGlobalOnNavigate","setOnNavigate","redirectPath","getItemAndParsePath","params","redirectAfterLogin","emitLoggedOut","canAccess","displaySnackbar","redirect","navigateTo","addEventListener","e","unlisten","listen","Promise","resolve","then","awaitSession","menuAlwaysTemporary","showArchivedChecked","archivedToggle","searchBox","search_bar","searchBar","appBar","AppBar_default","elevation","appBarResponsive","Toolbar_default","navIconHide","noWrap","menuSidebar","src_menu","fullScreenStyle","appFrame","contentResponsive","Switch_default","Route_default","snackbar","_content","overflow","default","withRouter","createMuiTheme","blueGrey","lightBlue","useNextVariants","AppContainer","basename","MuiThemeProvider_default","CssBaseline_default","BrowserRouter_default","getUserConfirmation","src_app","Prompt_default","isLocalhost","Boolean","hostname","match","register","navigator","URL","process","origin","swUrl","fetch","response","status","headers","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","src_render","app","ReactDOM","render","app_container","getElementById","registerServiceWorker","components_app","ContactNoMSON","prototype","EmailField","setValues","firstName","lastName","email","values","getValues","registerComponent","contacts","schema","formFactory","product","contacts_local_storage","storeName","contacts_firebase","apiKey","authDomain","projectId","collection","edit_contact","baseForm","listeners","actions","storeWhere","fields_screen","fields.addressField.value","addressLine1","addressLine2","city","stateProvince","postalCode","country","fields.booleanField.value","fields.chainedSelectField.value","fields.chainedSelectListField.value","fields.cityField.value","fields.collectionField.value","fields.countryField.value","fields.dateField.value","fields.emailField.value","fields.formField.value","github","medium","twitter","fields.idField.value","fields.integerField.value","fields.listFieldEmail.value","fields.listFieldName.value","fields.moneyField.value","fields.numberField.value","fields.passwordField.value","fields.personFullNameField.value","fields.personNameField.value","fields.phoneField.value","fields.postalCodeField.value","fields.provinceField.value","fields.selectField.value","fields.selectFieldMult.value","fields.selectListField.value","fields.stateField.value","fields.timeField.value","fields.textField.value","fields.textListField.value","fields.urlField.value","if","fields.id.useDisplayValue","$ne","fields.toggleDisplayValues","else","fields.id.editable","fields.toggleEditable","fields.id.disabled","fields.toggleDisabled","fields.id.fullWidth","fields.toggleFullWidth","chainedSelectOptions","parentValue","components_fields","elevate","fieldFactory","form_editor","skipRead","includeExtraneous","home","tasks","tasks_local_storage","tasks_firebase","FieldEditorForm","handleValueChange","componentName","clearErr","preview","Card_default","card","CardContent_default","gutterBottom","overflowY","maxHeight","reCAPTCHASiteKey","uiComponents","FieldEditorFormUI"],"mappings":"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","file":"static/js/main.0d34808c.chunk.js","sourcesContent":["import React from 'react';\nimport IconMui from '@material-ui/core/Icon';\nimport snakeCase from 'lodash/snakeCase';\n\n// Note: we use font icons instead of SVG icons as this allows us to support any icon dynamically\n// without adding all icons to the JS bundle. The MaterialUI icons are about 54KB which is\n// substantially smaller than their SVG counterparts.\n//\n// import * as Icons from '@material-ui/icons';\n\nexport default class Icon extends React.PureComponent {\n  handleClick = event => {\n    if (this.props.onClick) {\n      this.props.onClick(event);\n    }\n  };\n\n  // Convert to the font icon name so that we can use the SVG Icon names. This allows us to make\n  // changes to this logic without changing the calling code.\n  toFontIconName(svgIconName) {\n    return snakeCase(svgIconName);\n  }\n\n  render() {\n    const { className, icon } = this.props;\n\n    const iconContents = icon ? this.toFontIconName(icon) : null;\n\n    return (\n      <IconMui className={className} onClick={this.handleClick}>\n        {iconContents}\n      </IconMui>\n    );\n  }\n}\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from './icon';\nimport each from 'lodash/each';\nimport registrar from 'mson/lib/compiler/registrar';\n\nconst styles = theme => ({\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  },\n  primary: {\n    color: theme.palette.text.primary\n  },\n  secondary: {\n    color: theme.palette.text.secondary\n  },\n  selected: {\n    fontWeight: 'bold'\n  }\n});\n\nclass Submenu extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: this.childSelected()\n    };\n  }\n\n  childSelected() {\n    const { item, path } = this.props;\n\n    let childSelected = false;\n\n    each(item.items, item => {\n      if (path === item.path) {\n        childSelected = true;\n        return false; // exit loop\n      }\n    });\n\n    return childSelected;\n  }\n\n  handleClick = item => {\n    // Has sub items?\n    if (item.items) {\n      this.setState({ open: !this.state.open });\n    } else {\n      // Note: the navigation is handled by the parent as we want to be able to prevent the\n      // navigation if say a form is dirty, etc...\n      if (this.props.onNavigate) {\n        this.props.onNavigate(item);\n      }\n\n      if (this.props.onDrawerToggle) {\n        // Close the drawer\n        this.props.onDrawerToggle();\n      }\n    }\n  };\n\n  items() {\n    const { classes, item, path } = this.props;\n    const listItems = [];\n    item.items.forEach((item, index) => {\n      const isSelected = path === item.path;\n      let classNames = [classes.secondary];\n      if (isSelected) {\n        classNames.push(classes.selected);\n      }\n\n      if (\n        (!item.roles ||\n          (registrar.client && registrar.client.user.hasRole(item.roles))) &&\n        item.hidden !== true\n      ) {\n        listItems.push(\n          <ListItem\n            button\n            className={classes.nested}\n            key={index}\n            onClick={() => this.handleClick(item)}\n          >\n            <ListItemText\n              disableTypography\n              primary={\n                <Typography variant=\"body2\" className={classNames.join(' ')}>\n                  {item.label}\n                </Typography>\n              }\n            />\n          </ListItem>\n        );\n      }\n    });\n    return listItems;\n  }\n\n  render() {\n    const { item, classes, path } = this.props;\n    const items = item.items ? this.items() : null;\n\n    const isSelected = path === item.path;\n    let classNames = [classes.primary];\n    if (isSelected) {\n      classNames.push(classes.selected);\n    }\n\n    let listItems = null;\n    if (items) {\n      listItems = (\n        <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n          <List disablePadding>{this.items()}</List>\n        </Collapse>\n      );\n    }\n\n    return (\n      <div>\n        <ListItem button onClick={() => this.handleClick(item)}>\n          <ListItemText\n            disableTypography\n            primary={\n              <Typography variant=\"subtitle1\" className={classNames.join(' ')}>\n                {item.label}\n              </Typography>\n            }\n          />\n          {items ? (\n            this.state.open ? (\n              <Icon icon=\"ExpandLess\" />\n            ) : (\n              <Icon icon=\"ExpandMore\" />\n            )\n          ) : null}\n        </ListItem>\n        {listItems}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Submenu);\n","import React from 'react';\nimport difference from 'lodash/difference';\n\n// Usage: attach(['prop1', 'prop2', ...], componentOrName)(Component)\n\nconst attach = (_watchProps, componentOrName) => {\n  return Component => {\n    return class extends React.PureComponent {\n      wasMounted = false;\n\n      getComponent = props => {\n        if (!props) {\n          props = this.props;\n        }\n\n        if (!componentOrName) {\n          return props.component;\n        } else if (typeof componentOrName === 'string') {\n          return props[componentOrName];\n        } else {\n          // componentOrName is a component\n          return componentOrName;\n        }\n      };\n\n      constructor(props) {\n        super(props);\n\n        // The field props that we want to expose in the state. Remove any names that are in\n        // this.props so that we can override those values.\n        this.watchProps = difference(_watchProps, Object.keys(this.props));\n\n        // These values need to be in the state so that the component is rerendered when they change.\n        this.state = this.getComponent().get(this.watchProps);\n      }\n\n      handleFieldChange = (name, value) => {\n        if (this.watchProps.indexOf(name) !== -1) {\n          // Is the component mounted? Prevent a race condition where the handler tries to act the\n          // state after the component has been unmounted.\n          if (this.wasMounted) {\n            this.setState({ [name]: value });\n          }\n        }\n      };\n\n      componentDidUpdate(prevProps) {\n        if (this.getComponent() !== this.getComponent(prevProps)) {\n          // The component is changing so recreate the listener\n          this.removeListener();\n          this.addListener();\n\n          // Set the initial state as the component has changed\n          this.setInitialState();\n        }\n      }\n\n      addListener() {\n        this.getComponent().on('$change', this.handleFieldChange);\n      }\n\n      removeListener() {\n        this.getComponent().removeListener('$change', this.handleFieldChange);\n      }\n\n      setInitialState() {\n        const initialState = this.getComponent().get(this.watchProps);\n        this.setState(initialState);\n      }\n\n      componentDidMount() {\n        // Note: we have to use componentDidMount and not componentWillMount as handleFieldChange\n        // can change the state and we aren't allowed to change the state until the component has\n        // mounted.\n\n        this.wasMounted = true;\n\n        this.addListener();\n\n        // Update state with any changes that have occured since construction, but before mounting\n        this.setInitialState();\n      }\n\n      componentWillUnmount() {\n        this.removeListener();\n        this.wasMounted = false;\n      }\n\n      render() {\n        return <Component {...this.state} {...this.props} />;\n      }\n    };\n  };\n};\n\nexport default attach;\n","// TODO: when click on another section, close other sections? Requires moving menu state to app?\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport Divider from '@material-ui/core/Divider';\nimport Submenu from './submenu';\nimport attach from './attach';\nimport Typography from '@material-ui/core/Typography';\nimport registrar from 'mson/lib/compiler/registrar';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  drawerHeader: {\n    ...theme.mixins.toolbar,\n    paddingLeft: theme.spacing.unit * 3,\n    paddingTop: theme.spacing.unit\n  },\n  drawerPaper: {\n    width: 250\n  },\n  drawPaperResponsive: {\n    [theme.breakpoints.up('md')]: {\n      width: drawerWidth,\n      // position: 'relative',\n      // height: '100%',\n\n      // Extend to bottom of screen. TODO: does this work on mobile?\n      // https://stackoverflow.com/a/48506883/2831606\n      position: 'fixed',\n      height: '100vh'\n    }\n  }\n});\n\nclass Menu extends React.PureComponent {\n  handleDrawerToggle = () => {\n    if (this.props.onDrawerToggle) {\n      this.props.onDrawerToggle();\n    }\n  };\n\n  handleNavigate = menuItem => {\n    if (this.props.onNavigate) {\n      this.props.onNavigate(menuItem);\n    }\n  };\n\n  items() {\n    const { component, path } = this.props;\n    const items = component.get('items');\n    const submenus = [];\n    items.forEach((item, index) => {\n      // Has access to item?\n      if (\n        (!item.roles ||\n          (registrar.client && registrar.client.user.hasRole(item.roles))) &&\n        item.hidden !== true\n      ) {\n        submenus.push(\n          <Submenu\n            item={item}\n            key={index}\n            onNavigate={this.handleNavigate}\n            path={path}\n            onDrawerToggle={this.handleDrawerToggle}\n          />\n        );\n      }\n    });\n    return submenus;\n  }\n\n  render() {\n    const { classes, theme, mobileOpen, responsive /*, roles*/ } = this.props;\n\n    let items = null;\n    // if (!roles || (registrar.client && registrar.client.user.hasRole(roles))) {\n    items = this.items();\n    // }\n\n    const drawer = (\n      <div>\n        <div className={classes.drawerHeader}>\n          <Typography variant=\"h4\">Logo</Typography>\n        </div>\n        <Divider />\n        {items}\n      </div>\n    );\n\n    const temporaryDrawer = (\n      <Drawer\n        variant=\"temporary\"\n        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n        open={mobileOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n        onClose={this.handleDrawerToggle}\n        ModalProps={{\n          keepMounted: true // Better open performance on mobile.\n        }}\n      >\n        {drawer}\n      </Drawer>\n    );\n\n    const permanentDrawer = (\n      <Drawer\n        variant=\"permanent\"\n        open\n        classes={{\n          paper:\n            classes.drawerPaper +\n            (responsive ? ` ${classes.drawPaperResponsive}` : '')\n        }}\n      >\n        {drawer}\n      </Drawer>\n    );\n\n    if (responsive) {\n      return (\n        <div>\n          <Hidden mdUp>{temporaryDrawer}</Hidden>\n          <Hidden smDown implementation=\"css\">\n            {permanentDrawer}\n          </Hidden>\n        </div>\n      );\n    } else {\n      return temporaryDrawer;\n    }\n  }\n}\n\nMenu = withStyles(styles, { withTheme: true })(Menu);\nMenu = attach(['items' /*, 'roles'*/])(Menu);\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport Icon from './icon';\nimport globals from 'mson/lib/globals';\n\n// TODO: see https://material-ui-next.com/style/icons/#icons and implement:\n// 1. Mouseover to change background color\n// 2. Focus to increase width\n\nconst styles = theme => ({\n  textFieldInput: {\n    borderRadius: 3,\n    backgroundColor: theme.palette.primary[400],\n    fontSize: theme.typography.subtitle1.fontSize,\n    padding: '10px 10px 10px 42px',\n    width: 'calc(100%)',\n    color: theme.palette.common.white\n  },\n  searchIcon: {\n    position: 'relative',\n    top: '7px',\n    left: '-210px'\n  }\n});\n\nclass SearchBar extends React.PureComponent {\n  // TODO: move up to App component\n  handleKeyUp = event => {\n    // Enter pressed?\n    if (event.keyCode === 13) {\n      globals.set({ searchString: this.props.searchString });\n    }\n  };\n\n  render() {\n    const { classes, className, searchString, onChange } = this.props;\n\n    return (\n      <div className={className}>\n        <TextField\n          InputProps={{\n            disableUnderline: true,\n            classes: {\n              input: classes.textFieldInput\n            }\n          }}\n          value={searchString}\n          onKeyUp={this.handleKeyUp}\n          onChange={onChange}\n        />\n        <Icon icon=\"Search\" className={classes.searchIcon} />\n      </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SearchBar);\n","import React from 'react';\nimport ButtonMui from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Icon from './icon';\n\nconst styles = theme => ({\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  marginTop: {\n    marginTop: theme.spacing.unit * 3\n  }\n});\n\nclass Button extends React.PureComponent {\n  handleClick = () => {\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      type,\n      disabled,\n      label,\n      icon,\n      fullWidth,\n      variant,\n      marginTop\n    } = this.props;\n\n    const className = marginTop !== false ? classes.marginTop : null;\n\n    return (\n      <ButtonMui\n        className={className}\n        type={type}\n        color=\"primary\"\n        disabled={disabled}\n        onClick={this.handleClick}\n        fullWidth={fullWidth}\n        variant={variant}\n      >\n        {icon ? <Icon className={classes.leftIcon} icon={icon} /> : null}\n        {label}\n      </ButtonMui>\n    );\n  }\n}\n\nexport default withStyles(styles)(Button);\n","import React from 'react';\nimport attach from '../attach';\nimport Button from '../button';\n\nclass ButtonField extends React.PureComponent {\n  handleClick = () => {\n    const { type } = this.props;\n\n    // Is the button not a submit button? Let the form handle submit buttons so that the form\n    // performs the validation\n    if (type !== 'submit') {\n      this.props.component.emitClick();\n    }\n  };\n\n  render() {\n    const { label, type, disabled, icon, fullWidth, variant } = this.props;\n    return (\n      <Button\n        type={type}\n        label={label}\n        disabled={disabled}\n        onClick={this.handleClick}\n        icon={icon}\n        fullWidth={fullWidth}\n        variant={variant}\n      />\n    );\n  }\n}\n\nexport default attach([\n  'label',\n  'type',\n  'disabled',\n  'icon',\n  'fullWidth',\n  'variant'\n])(ButtonField);\n","import React from 'react';\nimport FormControlMU from '@material-ui/core/FormControl';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  formControl: {\n    margin: theme.spacing.unit\n  },\n  fullWidth: {\n    // TODO: bug in material ui?\n    width: `calc(100% - ${theme.spacing.unit * 2}px)`\n  },\n  noMarginBottom: {\n    marginBottom: 0\n  }\n});\n\nclass FormControl extends React.PureComponent {\n  render() {\n    const { fullWidth, children, classes, marginBottom } = this.props;\n\n    const fullWidthClassName = fullWidth ? classes.fullWidth : '';\n    const noMarginBottomClassName =\n      marginBottom === false ? classes.noMarginBottom : '';\n\n    return (\n      <FormControlMU\n        fullWidth={fullWidth}\n        className={`${\n          classes.formControl\n        } ${fullWidthClassName} ${noMarginBottomClassName}`}\n      >\n        {children}\n      </FormControlMU>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormControl);\n","// TODO: make full width of field include right margin if there is help?\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '../icon';\n\nexport default class HelpToolTip extends React.PureComponent {\n  render() {\n    const { help } = this.props;\n\n    // Note: we use disableTouchListener as otherwise the user needs to press and hold before the\n    // tooltip appears, something that is not intuitive. With this configuration, the user can just\n    // click the button to view the tooltip.\n    return (\n      <Tooltip disableTouchListener title={help}>\n        <IconButton aria-label=\"Help\">\n          <Icon icon=\"HelpOutline\" />\n        </IconButton>\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport FormLabelMui from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  shrink: {\n    ...Object.assign({}, theme.typography.caption, { color: undefined })\n  },\n  noShrink: {\n    ...Object.assign({}, theme.typography.subtitle1, { color: undefined })\n  }\n});\n\nclass FormLabel extends React.PureComponent {\n  render() {\n    const { children, classes, shrink } = this.props;\n\n    const childProps = Object.assign({}, this.props, {\n      shrink: undefined,\n      classes: undefined\n    });\n\n    const className = shrink ? classes.shrink : classes.noShrink;\n\n    return (\n      <FormLabelMui {...childProps} className={className}>\n        {children}\n      </FormLabelMui>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormLabel);\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '../form-control';\nimport attach from '../attach';\nimport HelpToolTip from './help-tool-tip';\nimport FormLabel from './form-label';\n\nclass CommonField extends React.PureComponent {\n  render() {\n    const {\n      component,\n      children,\n      label,\n      required,\n      fullWidth,\n      err,\n      editable,\n      touched,\n      help,\n      hideLabelUI,\n      hideLabel,\n      useDisplayValue,\n      shrinkLabel,\n      inlineLabel,\n      marginBottom,\n      autoHideLabel\n    } = this.props;\n\n    let fld = null;\n\n    let lbl = null;\n\n    const isBlank = component.isBlank();\n\n    const id = component.getUniqueId();\n\n    if (!hideLabelUI && !hideLabel && (!autoHideLabel || label)) {\n      if (editable && !useDisplayValue && !inlineLabel) {\n        lbl = (\n          <InputLabel\n            htmlFor={id}\n            error={touched && err ? true : false}\n            // If label is blank then don't show as required\n            required={label && required}\n            shrink={shrinkLabel}\n          >\n            {label}\n          </InputLabel>\n        );\n      } else {\n        // We display a non-breaking space when the label is empty so that CompositeFields, like the\n        // ChainedSelectField, print all their display values on the same line.\n        const labelText = label ? label : '\\u00A0';\n\n        lbl = (\n          <FormLabel\n            htmlFor={id}\n            error={touched && err ? true : false}\n            required={required && !useDisplayValue && editable}\n            shrink={useDisplayValue || !editable || shrinkLabel}\n          >\n            {labelText}\n          </FormLabel>\n        );\n\n        if (!inlineLabel) {\n          // We wrap the label in a div tag so that the proceeding display value appears on a\n          // different line\n          lbl = <div>{lbl}</div>;\n        }\n      }\n    }\n\n    const firstErr = component.getFirstErr();\n\n    fld = (\n      <span>\n        {lbl}\n        {children}\n        {help && editable ? <HelpToolTip help={help} /> : ''}\n        {touched && err ? (\n          <FormHelperText error>{firstErr}</FormHelperText>\n        ) : null}\n      </span>\n    );\n\n    if (editable || !isBlank) {\n      return (\n        <FormControl fullWidth={fullWidth} marginBottom={marginBottom}>\n          {fld}\n        </FormControl>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n// 'value' is needed in the event we are showing the display value\nCommonField = attach([\n  'label',\n  'required',\n  'fullWidth',\n  'value',\n  'err',\n  'editable',\n  'touched',\n  'help',\n  'hideLabel',\n  'useDisplayValue',\n  'autoHideLabel'\n])(CommonField);\n\nexport default CommonField;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  root: {\n    display: 'inline-block'\n  }\n});\n\nclass DisplayValueTypography extends React.PureComponent {\n  render() {\n    const { children, classes } = this.props;\n\n    // We use a span tag so that the element is inline\n    return (\n      <Typography variant=\"subtitle1\" component=\"span\" className={classes.root}>\n        {children}\n      </Typography>\n    );\n  }\n}\n\nexport default withStyles(styles)(DisplayValueTypography);\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport CommonField from './common-field';\nimport attach from '../attach';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport DisplayValueTypography from './display-value-typography';\n\nclass BooleanField extends React.PureComponent {\n  handleChange = event => {\n    this.props.component.setValue(event.target.checked);\n  };\n\n  render() {\n    const {\n      value,\n      disabled,\n      component,\n      editable,\n      useDisplayValue,\n      label\n    } = this.props;\n\n    let hideLabelUI = null;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      hideLabelUI = true;\n      fld = (\n        <FormControlLabel\n          control={\n            <Switch\n              checked={value ? value : false}\n              onChange={this.handleChange}\n              value=\"true\"\n              disabled={disabled}\n            />\n          }\n          label={label}\n        />\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography>\n          {component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return (\n      <CommonField component={component} hideLabelUI={hideLabelUI}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nexport default attach([\n  'value',\n  'err',\n  'disabled',\n  'editable',\n  'useDisplayValue',\n  'label'\n])(BooleanField);\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Component from './component';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing.unit,\n    padding: theme.spacing.unit * 2\n  },\n  content: {\n    flex: 1 // TODO: needed?\n  }\n});\n\nclass Card extends React.PureComponent {\n  render() {\n    const { classes, component } = this.props;\n\n    const content = component.get('content');\n    const title = component.get('title');\n\n    return (\n      <Grid container spacing={0} justify=\"center\">\n        <Grid item xs={12} sm={9} md={6} lg={6}>\n          <Paper className={classes.paper}>\n            <Grid container wrap=\"nowrap\">\n              <Grid item className={classes.content}>\n                <Typography variant=\"h5\" component=\"h2\">\n                  {title}\n                </Typography>\n                <Component component={content} />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Card);\n","import React from 'react';\nimport attach from '../attach';\nimport Component from '../component';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  root: {\n    marginLeft: theme.spacing.unit\n  }\n});\n\nclass ComponentField extends React.PureComponent {\n  render() {\n    const { content, classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Component component={content} />\n      </div>\n    );\n  }\n}\n\nComponentField = withStyles(styles)(ComponentField);\nComponentField = attach(['content'])(ComponentField);\nexport default ComponentField;\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  // break: {\n  //   flexBasis: '100%',\n  //   width: '0px',\n  //   height: '0px',\n  //   overflow: 'hidden'\n  // }\n  break: {\n    width: '100%'\n  }\n});\n\nclass FlexBreak extends React.PureComponent {\n  render() {\n    const { classes } = this.props;\n    return <div className={classes.break} />;\n  }\n}\n\nexport default withStyles(styles)(FlexBreak);\n","import each from 'lodash/each';\nclass Utils {\n  getIfDefined(props) {\n    const definedProps = {};\n    each(props, (value, name) => {\n      if (value !== undefined) {\n        definedProps[name] = value;\n      }\n    });\n    return definedProps;\n  }\n}\nexport default new Utils();\n","import React from 'react';\nimport componentUtils from '../component-utils';\nimport attach from '../attach';\nimport FlexBreak from '../flex-break';\nimport utils from '../utils';\n\n// Use MSON React Component instead?\nclass Field extends React.PureComponent {\n  render() {\n    const {\n      component,\n      hidden,\n      block,\n      accessEditable,\n      didCreate,\n      noBlock,\n      disabled\n    } = this.props;\n\n    // Don't show the component until didCreate is true as we may need to wait for fields to be\n    // hidden or otherwise modified by listeners\n    if (hidden || !didCreate) {\n      return null;\n    } else if (component.getClassName() === 'Field') {\n      // Prevent an infinite loop caused by trying to render component=Field\n      return null;\n    } else {\n      // Get corresponding UI component\n      const Field = componentUtils.getUIComponent(component);\n\n      // Note: we use React.Fragment over a span as spans can cause issues with the flexbox layout\n      // when displaying a nested form\n      return (\n        <React.Fragment>\n          <Field\n            component={component}\n            accessEditable={accessEditable}\n            block={block}\n            {...utils.getIfDefined({ disabled })}\n          />\n          {!noBlock && block ? <FlexBreak /> : null}\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default attach(['hidden', 'block', 'didCreate'])(Field);\n","import React from 'react';\nimport Field from './field';\nimport attach from '../attach';\nimport HelpToolTip from './help-tool-tip';\nimport FlexBreak from '../flex-break';\n\nclass CompositeField extends React.PureComponent {\n  render() {\n    const {\n      component,\n      help,\n      editable,\n      useDisplayValue,\n      block,\n      disabled\n    } = this.props;\n\n    let fields = [];\n\n    let lastIsBlock = false;\n\n    let first = true;\n\n    component.eachField((field, index, last) => {\n      // Don't show the field if we are using the display value and it is blank, e.g. it is the\n      // empty \"next\" field.\n      if (first || !useDisplayValue || !field.isBlank()) {\n        if (last && field.get('block')) {\n          lastIsBlock = true;\n        }\n        fields.push(\n          <Field\n            component={field}\n            key={index}\n            noBlock={last}\n            disabled={disabled}\n          />\n        );\n      }\n\n      if (first) {\n        first = false;\n      }\n    });\n\n    if (help && editable) {\n      fields.push(<HelpToolTip help={help} key=\"help\" />);\n    }\n\n    if (lastIsBlock && block !== false) {\n      // Break after any help\n      fields.push(<FlexBreak key=\"break\" />);\n    }\n\n    return fields;\n  }\n}\n\n// We want the component to update when we receive new fields\nexport default attach(['change', 'help', 'editable', 'useDisplayValue'])(\n  CompositeField\n);\n","import React from 'react';\nimport attach from '../attach';\nimport CommonField from './common-field';\nimport MuiPickersUtilsProvider from 'material-ui-pickers/MuiPickersUtilsProvider';\nimport DateFnsUtils from 'material-ui-pickers/utils/date-fns-utils';\nimport DateTimePicker from 'material-ui-pickers/DateTimePicker';\nimport DatePicker from 'material-ui-pickers/DatePicker';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DisplayValueTypography from './display-value-typography';\n\nconst styles = theme => ({\n  root: {\n    // We need to add a margin as the picker doesn't play well with the Material-UI label\n    marginTop: theme.spacing.unit * 2\n  }\n});\n\nclass DateField extends React.PureComponent {\n  handleDateChange = date => {\n    this.props.component.setValue(date);\n  };\n\n  handleBlur = () => {\n    this.props.component.setTouched(true);\n  };\n\n  render() {\n    const {\n      component,\n      classes,\n      value,\n      includeTime,\n      editable,\n      useDisplayValue,\n      minDate,\n      maxDate,\n      fullWidth,\n      disabled,\n      accessEditable\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    let shrinkLabel = false;\n\n    const Component = includeTime ? DateTimePicker : DatePicker;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      // The picker doesn't play well with the label from Material-UI so we need to manually shrink\n      // the label when there is a value.\n      shrinkLabel = !!value;\n      fld = (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <span>\n            <Component\n              // Value cannot be undefined or else picker will default to today\n              value={value ? value : null}\n              onChange={this.handleDateChange}\n              clearable\n              className={classes.root}\n              minDate={minDate}\n              maxDate={maxDate}\n              onClose={this.handleBlur}\n              fullWidth={fullWidth}\n              disabled={dis}\n              // format=\"M/d/YYYY h:m a\"\n            />\n          </span>\n        </MuiPickersUtilsProvider>\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography>\n          {component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return (\n      <CommonField component={component} shrinkLabel={shrinkLabel}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nDateField = withStyles(styles)(DateField);\n\nexport default attach([\n  'value',\n  'includeTime',\n  'editable',\n  'useDisplayValue',\n  'minDate',\n  'maxDate',\n  'fullWidth',\n  'disabled'\n])(DateField);\n","import React from 'react';\nimport Field from './fields/field';\nimport attach from './attach';\nimport access from 'mson/lib/access';\n\n// Use a PureComponent so that the form is re-rendered when the state/props do not change\nclass Form extends React.PureComponent {\n  state = {\n    fieldsCanAccess: null\n  };\n\n  // Enable automatic validation whenever a user changes data. This feature allows the user to see\n  // errors in real-time.\n  turnOnAutoValidate() {\n    this.props.component.set({ autoValidate: true });\n  }\n\n  calcFieldsCanAccess() {\n    const { component, mode } = this.props;\n    const canDowngrade = true;\n    const fieldsCanAccess = access.fieldsCanAccess(\n      // Default to update so that access control has a sensible default\n      mode ? mode : 'update',\n      component,\n      null,\n      canDowngrade\n    );\n\n    // We need to set the ignoreErrs state as there may be a field that is not accessible that is\n    // generating an error.\n    for (const field of component.getFields()) {\n      const ignoreErrs = fieldsCanAccess[field.get('name')] === undefined;\n      field.set({ ignoreErrs });\n    }\n\n    return fieldsCanAccess;\n  }\n\n  adjustAccess() {\n    let fieldsCanAccess = null;\n\n    // Was access specified? We check the form instead of this.props.access as this.props.access may\n    // not have been updated yet.\n    if (this.props.component.get('access')) {\n      fieldsCanAccess = this.calcFieldsCanAccess();\n    }\n\n    this.setState({ fieldsCanAccess });\n  }\n\n  constructor(props) {\n    super(props);\n    this.turnOnAutoValidate();\n\n    if (props.access) {\n      const fieldsCanAccess = this.calcFieldsCanAccess();\n      this.state.fieldsCanAccess = fieldsCanAccess;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { component, access, mode } = this.props;\n\n    // Did the form change?\n    if (prevProps.component !== component) {\n      this.turnOnAutoValidate();\n    }\n\n    // Did the access, more or form change?\n    if (\n      prevProps.access !== access ||\n      prevProps.mode !== mode ||\n      prevProps.component !== component\n    ) {\n      this.adjustAccess();\n    }\n  }\n\n  handleSave = event => {\n    // Stop the form from refreshing the page. We can't rely on the default functionality as there\n    // may be form errors that need to stop the form from submitting.\n    event.preventDefault();\n\n    // No errors?\n    const { component } = this.props;\n\n    // Is the submit action enabled?\n    if (!component.get('disableSubmit')) {\n      component.setTouched(true);\n      component.validate();\n      if (component.getErrs().length === 0) {\n        component.submit();\n      }\n    }\n  };\n\n  render() {\n    const { component, formTag, isLoading, disabled } = this.props;\n    const { fieldsCanAccess } = this.state;\n    const fields = component.get('fields');\n\n    // Hide until the data has finished loading\n    if (isLoading) {\n      return null;\n    }\n\n    // The form key is needed or else React will not re-render all fields when the field indexes are\n    // the same and we switch from route to another.\n    const key = component.getKey();\n\n    const flds = fields.map((field, index) => {\n      if (\n        fieldsCanAccess === null ||\n        fieldsCanAccess[field.get('name')] !== undefined\n      ) {\n        let accessEditable = null;\n        if (\n          fieldsCanAccess !== null &&\n          fieldsCanAccess[field.get('name')] === 'read'\n        ) {\n          accessEditable = false;\n        }\n        return (\n          <Field\n            key={key + '_' + index}\n            component={field}\n            accessEditable={accessEditable}\n            disabled={disabled}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n\n    if (formTag !== false) {\n      return <form onSubmit={this.handleSave}>{flds}</form>;\n    } else {\n      return flds;\n    }\n  }\n}\n\nexport default attach([\n  'access',\n  'mode',\n  'isLoading',\n\n  // We listen for a change to fields so that we can render when a field is added\n  'change'\n])(Form);\n","import React from 'react';\nimport CommonField from './common-field';\nimport Form from '../form';\nimport attach from '../attach';\nimport FlexBreak from '../flex-break';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  root: {\n    marginLeft: theme.spacing.unit * 2,\n\n    // The following flex properties are needed so that we can set a margin for all fields in the\n    // nested form\n    display: 'flex',\n    flexFlow: 'wrap'\n  }\n});\n\nclass FormField extends React.PureComponent {\n  render() {\n    const { component, hideLabel, classes, disabled } = this.props;\n\n    const isBlank = component.isBlank();\n\n    const form = component.get('form');\n\n    return (\n      <span>\n        {!hideLabel && (\n          <CommonField\n            component={component}\n            inlineLabel=\"true\"\n            shrinkLabel={!isBlank}\n            marginBottom={false}\n          />\n        )}\n        <FlexBreak />\n        <span className={classes.root}>\n          <Form component={form} formTag={false} disabled={disabled} />\n        </span>\n      </span>\n    );\n  }\n}\n\nFormField = withStyles(styles)(FormField);\n\nexport default attach([\n  'hideLabel',\n  'value' // Changes when the value is or isn't blank\n])(FormField);\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\n// import Menu from '@material-ui/core/Menu';\n// import MenuItem from '@material-ui/core/Menu/MenuItem';\n// import ListItemIcon from '@material-ui/core/List/ListItemIcon';\n// import ListItemText from '@material-ui/core/List/ListItemText';\nimport Icon from './icon';\nimport Grid from '@material-ui/core/Grid';\n// import Tooltip from '@material-ui/core/Tooltip';\n\nexport default class FormCardButtons extends React.PureComponent {\n  render() {\n    const {\n      forbidUpdate,\n      forbidDelete,\n      editable,\n      disabled,\n      archivedAt,\n      onEdit,\n      onDelete\n    } = this.props;\n\n    // NOTE: using Tooltips below when we have 100 more items leads to a significant latency. In the\n    // future, if we wish to support tooltips then we'll probably need to lazy load the tooltip on\n    // mouse over.\n\n    let updateButton = null;\n    if (!forbidUpdate) {\n      // <Tooltip title=\"Edit\">\n      updateButton = (\n        <IconButton onClick={onEdit}>\n          <Icon icon=\"Edit\" />\n        </IconButton>\n      );\n      // </Tooltip>\n    }\n\n    let deleteButton = null;\n    if (!forbidDelete) {\n      deleteButton = (\n        <IconButton onClick={onDelete}>\n          <Icon icon={archivedAt ? 'Restore' : 'Delete'} />\n        </IconButton>\n      );\n    }\n\n    if (editable && !disabled && (!forbidUpdate || !forbidDelete)) {\n      return (\n        <Grid item>\n          {updateButton}\n          {deleteButton}\n          {/* TODO: make the more menu optional\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={this.handleMoreClose}\n          >\n            <MenuItem\n              className={classes.menuItem}\n              onClick={event => this.handleEdit(event)}\n            >\n              <ListItemIcon className={classes.icon}>\n                <Icon icon=\"Edit\" />\n              </ListItemIcon>\n              <ListItemText\n                classes={{ primary: classes.primary }}\n                inset\n                primary=\"Edit\"\n              />\n            </MenuItem>\n            <MenuItem\n              className={classes.menuItem}\n              onClick={event => this.handleDelete(event)}\n            >\n              <ListItemIcon className={classes.icon}>\n                <Icon icon=\"Delete\" />\n              </ListItemIcon>\n              <ListItemText\n                classes={{ primary: classes.primary }}\n                inset\n                primary=\"Delete\"\n              />\n            </MenuItem>\n          </Menu>\n          */}\n        </Grid>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Component from './component';\nimport attach from './attach';\nimport FormCardButtons from './form-card-buttons';\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing.unit,\n    padding: theme.spacing.unit * 2\n  },\n  content: {\n    flex: 1,\n    cursor: 'pointer'\n  }\n});\n\n// Use PureComponent so that we avoid unnecessary re-rendering\nclass FormCard extends React.PureComponent {\n  handleClick = event => {\n    if (this.props.onClick) {\n      this.props.onClick(event, this.props.component);\n    }\n  };\n\n  handleEdit = (event, id) => {\n    if (this.props.onEdit) {\n      this.props.onEdit(event, this.props.component);\n    }\n  };\n\n  handleDelete = event => {\n    // this.handleMoreClose();\n    if (this.props.onDelete) {\n      this.props.onDelete(this.props.component);\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      component,\n      forbidUpdate,\n      forbidDelete,\n      editable,\n      disabled,\n      value\n    } = this.props;\n\n    return (\n      <div>\n        <Paper className={classes.paper}>\n          <Grid container wrap=\"nowrap\">\n            <Grid\n              item\n              className={classes.content}\n              onClick={event => this.handleClick(event)}\n            >\n              <Component component={component} formTag={false} mode=\"read\" />\n            </Grid>\n            <FormCardButtons\n              forbidUpdate={forbidUpdate}\n              forbidDelete={forbidDelete}\n              editable={editable}\n              disabled={disabled}\n              archivedAt={value.archivedAt}\n              onEdit={event => this.handleEdit(event)}\n              onDelete={event => this.handleDelete(event)}\n            />\n          </Grid>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nFormCard = withStyles(styles)(FormCard);\nexport default attach(['value'])(FormCard);\n","import React from 'react';\nimport Button from './button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Component from './component';\nimport attach from './attach';\n\nclass FormDialog extends React.PureComponent {\n  state = { saveClicked: false, previousMode: null };\n\n  handleClose = withCancelButton => {\n    // Prevent the user from losing data when pressing esc or clicking outside dialog\n    const { mode, onClose, onCancel, currentForm } = this.props;\n    if (withCancelButton || mode !== 'update') {\n      if (mode === 'update') {\n        if (onCancel) {\n          onCancel(currentForm);\n        }\n      } else {\n        if (onClose) {\n          onClose(currentForm);\n        }\n      }\n    }\n  };\n\n  handleEdit = () => {\n    if (this.props.onEdit) {\n      this.props.onEdit(this.props.currentForm);\n    }\n  };\n\n  handleSave = event => {\n    // Stop the form from refreshing the page\n    event.preventDefault();\n\n    // Should the submit action be disabled? For example, we may be editing in a nested dialog\n    if (!this.props.disableSubmit) {\n      if (this.props.onSave) {\n        this.props.onSave();\n      }\n\n      // Disable the save button so that the user sees that something is being processed\n      this.setState({ saveClicked: true });\n    }\n  };\n\n  handleDelete = () => {\n    if (this.props.onDelete) {\n      this.props.onDelete(this.props.currentForm);\n    }\n  };\n\n  isOpen() {\n    return !!this.props.mode;\n  }\n\n  componentDidUpdate(prevProps) {\n    // If the mode or err changes then allow the user to click save\n    if (\n      this.props.mode !== prevProps.mode ||\n      this.props.err !== prevProps.err\n    ) {\n      this.setState({ saveClicked: false });\n    }\n\n    if (this.props.mode !== prevProps.mode) {\n      this.setState({ previousMode: prevProps.mode });\n    }\n  }\n\n  render() {\n    const { mode, component, forbidUpdate, forbidDelete, value } = this.props;\n\n    const { saveClicked, previousMode } = this.state;\n\n    const disableSave =\n      component.hasErrorForTouchedField() ||\n      !component.get('dirty') ||\n      saveClicked;\n\n    const open = this.isOpen();\n\n    let buttons = null;\n\n    // Note: we analyze the previousMode so that the user isn't flashed with new buttons immediately\n    // after they click save or close the dialog\n    if (\n      mode === 'update' ||\n      mode === 'create' ||\n      (mode === null &&\n        (previousMode === 'update' || previousMode === 'create'))\n    ) {\n      buttons = (\n        <div>\n          {/* We use type=submit so that the form is submitted when the user presses enter */}\n          <Button\n            type=\"submit\"\n            label=\"Save\"\n            icon=\"Save\"\n            disabled={disableSave}\n          />\n          <Button\n            label=\"Cancel\"\n            icon=\"Cancel\"\n            onClick={() => this.handleClose(true)}\n          />\n        </div>\n      );\n    } else if (!forbidUpdate || !forbidDelete) {\n      buttons = (\n        <div>\n          {forbidUpdate ? (\n            ''\n          ) : (\n            <Button label=\"Edit\" icon=\"Edit\" onClick={this.handleEdit} />\n          )}\n          {forbidDelete ? (\n            ''\n          ) : (\n            <Button\n              label={value.archivedAt ? 'Restore' : 'Delete'}\n              icon={value.archivedAt ? 'Restore' : 'Delete'}\n              onClick={this.handleDelete}\n            />\n          )}\n          <Button\n            label=\"Close\"\n            icon=\"Cancel\"\n            onClick={() => this.handleClose(true)}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <Dialog\n        open={open}\n        onClose={() => this.handleClose(false)}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        {/* We use a form element so that we can submit the form on enter */}\n        <form onSubmit={this.handleSave}>\n          <DialogContent>\n            <Component component={component} formTag={false} mode={mode} />\n          </DialogContent>\n          {buttons ? <DialogActions>{buttons}</DialogActions> : ''}\n        </form>\n      </Dialog>\n    );\n  }\n}\n\nFormDialog = withMobileDialog()(FormDialog);\nFormDialog = attach(['err', 'dirty', 'value', 'mode', 'disableSubmit'])(\n  FormDialog\n);\nexport default FormDialog;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class ConfirmationDialog extends React.PureComponent {\n  handleClose = yes => {\n    if (this.props.onClose) {\n      this.props.onClose(yes);\n    }\n  };\n\n  render() {\n    const { title, text, open, alert } = this.props;\n    return (\n      <div>\n        <Dialog\n          open={open}\n          onClose={() => this.handleClose(false)}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {text}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            {alert ? null : (\n              <Button onClick={() => this.handleClose(false)} color=\"primary\">\n                No\n              </Button>\n            )}\n            <Button\n              onClick={() => this.handleClose(true)}\n              color=\"primary\"\n              autoFocus\n            >\n              {alert ? 'OK' : 'Yes'}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Icon from '../icon';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  formControl: {\n    // Specify a more appropriate min width so that the field is wide enough to cover most labels\n    // minWidth: 120\n  },\n  flip: {\n    transform: 'scaleY(-1)'\n  }\n});\n\nclass SelectOrder extends React.PureComponent {\n  handleClick = () => {\n    const sortOrder = this.props.sortOrder === 'ASC' ? 'DESC' : 'ASC';\n    this.props.onChange({ sortOrder });\n  };\n\n  handleChange = event => {\n    this.props.onChange({ sortBy: event.target.value });\n  };\n\n  render() {\n    const { classes, sortBy, sortOrder, options } = this.props;\n\n    const flipped = sortOrder !== 'DESC';\n\n    const items = options.map(option => {\n      return (\n        <MenuItem value={option.value} key={option.value}>\n          {option.label}\n        </MenuItem>\n      );\n    });\n\n    // If we wanted the icon as an adornment:\n    // <TextField\n    //   select\n    //   InputProps={{\n    //     startAdornment:\n    //     <InputAdornment position=\"start\">\n    //       <IconButton color=\"primary\" aria-label=\"new\" onClick={this.handleOrder}>\n    //         <Icon icon=\"Sort\" className={classes.flip} />\n    //       </IconButton>\n    //     </InputAdornment>,\n    //   }}\n    // >\n    //   <MenuItem value={10}>Ten</MenuItem>\n    //   <MenuItem value={20}>Twenty</MenuItem>\n    //   <MenuItem value={30}>Thirty</MenuItem>\n    // </TextField>\n    return (\n      <div>\n        <FormControl className={classes.formControl}>\n          {/*\n          <InputLabel>Sort by</InputLabel>\n          */}\n          <Select value={sortBy} onChange={this.handleChange}>\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            {items}\n          </Select>\n        </FormControl>\n        <IconButton\n          color=\"primary\"\n          aria-label=\"sort order\"\n          onClick={this.handleClick}\n        >\n          <Icon icon=\"Sort\" className={flipped ? classes.flip : null} />\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SelectOrder);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport FormCard from '../form-card';\nimport FormDialog from '../form-dialog';\nimport attach from '../attach';\nimport Button from '../button';\nimport Typography from '@material-ui/core/Typography';\nimport ConfirmationDialog from '../confirmation-dialog';\nimport access from 'mson/lib/access';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './collection-field.css';\nimport SelectOrder from './select-order';\nimport ButtonField from 'mson/lib/fields/button-field';\nimport Icon from '../icon';\nimport CommonField from './common-field';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst getItemStyle = (isDragging, draggableStyle, theme) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  padding: theme.spacing.unit / 8,\n  margin: `0 0 ${theme.spacing.unit / 8}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? theme.palette.secondary[400] : undefined,\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = (isDraggingOver, theme) => ({\n  background: isDraggingOver ? theme.palette.grey[300] : undefined,\n  width: '100%'\n});\n\n// Note:\n//   - We use a dialog to view/edit the forms as we want to be able to display just a few pieces\n//     of data in the list and all the data when viewing/editing.\n\nconst styles = theme => ({\n  spacer: {\n    backgroundColor: theme.palette.grey[300],\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    animation: 'fadeIn 1s infinite alternate'\n  },\n  footer: {\n    // Create space at the footer so that it is more evident to the user that the next page has been\n    // loaded\n    height: 50,\n    backgroundColor: theme.palette.grey[300],\n    margin: theme.spacing.unit,\n    animation: 'fadeIn 1s infinite alternate'\n  }\n});\n\nclass CollectionField extends React.PureComponent {\n  state = {\n    confirmationOpen: false,\n    sortBy: '',\n    sortOrder: 'ASC'\n  };\n\n  handleClose = () => {\n    this.props.component.set({ mode: null });\n  };\n\n  handleCancel = form => {\n    const { component } = this.props;\n    if (component.get('skipRead')) {\n      component.set({ mode: null });\n    } else {\n      component.set({ currentForm: form, mode: 'read' });\n    }\n  };\n\n  handleClick = form => {\n    const { component } = this.props;\n    if (component.get('skipRead')) {\n      component.set({ currentForm: form, mode: 'update' });\n    } else {\n      component.set({ currentForm: form, mode: 'read' });\n    }\n  };\n\n  handleEdit = form => {\n    this.props.component.set({ currentForm: form, mode: 'update' });\n  };\n\n  handleNew = () => {\n    this.props.component.set({ currentForm: null, mode: 'create' });\n  };\n\n  handleSave = async () => {\n    await this.props.component.save();\n  };\n\n  isOpen() {\n    return !!this.props.mode;\n  }\n\n  handleDelete = async formToDelete => {\n    const { component } = this.props;\n\n    const open = this.isOpen();\n    if (formToDelete) {\n      component.set({ currentForm: formToDelete });\n    } else {\n      // Are we already focussed on this form\n      formToDelete = component.get('form');\n    }\n\n    const archivedAt = formToDelete.getValue('archivedAt');\n\n    // Are we restoring?\n    if (archivedAt) {\n      await component.restore(formToDelete);\n\n      // Is the dialog open?\n      if (open) {\n        // Close it\n        component.set({ mode: null });\n      }\n    } else {\n      this.setState({\n        confirmationOpen: true,\n        // confirmationTitle: `Are you sure you want to delete this ${singularLabel}?`\n        confirmationTitle: 'Delete this?'\n      });\n      component.set({ mode: null });\n    }\n  };\n\n  handleConfirmationClose = async yes => {\n    if (yes) {\n      const { component } = this.props;\n      await component.archive(component.get('form'));\n    }\n    this.setState({ confirmationOpen: false });\n  };\n\n  canCreate() {\n    return access.canCreate(this.props.component.get('form'));\n  }\n\n  canUpdate() {\n    return access.canUpdate(this.props.component.get('form'));\n  }\n\n  canArchive() {\n    return access.canArchive(this.props.component.get('form'));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.bufferTopId !== prevProps.bufferTopId) {\n      // Resize the spacer now that the newly prepended items have been rendered\n      this.props.component._infiniteLoader.resizeSpacer(this.props.bufferTopId);\n    }\n\n    if (this.props.spacerHeight !== prevProps.spacerHeight) {\n      this.props.component._infiniteLoader.setSpacerResizing(false);\n    }\n\n    if (this.props.change !== prevProps.change) {\n      this.props.component.set({ isLoading: false });\n    }\n  }\n\n  canDrag() {\n    const { forbidOrder, showArchived, searchString, order } = this.props;\n\n    // Can we order by dragging?\n    return !forbidOrder && !showArchived && !searchString && !order;\n  }\n\n  cards(canUpdate, canArchive) {\n    const {\n      component,\n      forbidUpdate,\n      forbidDelete,\n      forbidOrder,\n      editable,\n      disabled,\n      useDisplayValue,\n      theme\n    } = this.props;\n\n    // Force to 1 colum when ordering allowed\n    const maxColumns = forbidOrder === false ? 1 : this.props.maxColumns;\n\n    const maxGrids = 12 / maxColumns;\n\n    let cards = [];\n\n    let index = 0;\n    for (const form of component.getForms()) {\n      // TODO: Rendering should not change form. Use utils.getIfDefined() in form to allow passing\n      // in of editable via React layer\n      form.setEditable(false);\n\n      // We need to use the id for the key as we use the same list of cards when toggling\n      // showArchive\n      const key = form.getUniqueId();\n\n      // Note: we use an id instead of ref so that more of our logic can be reused across different\n      // frameworks. We use the form id so that we have a consistent way of referencing the element\n      // for things like infinite loading.\n      const id = component.getUniqueItemId(form.getValue('id'));\n\n      const item = (\n        <Grid item xs={12} sm={maxGrids} lg={maxGrids} key={key} id={id}>\n          <FormCard\n            onClick={() => this.handleClick(form)}\n            onEdit={() => this.handleEdit(form)}\n            onDelete={this.handleDelete}\n            component={form}\n            forbidUpdate={forbidUpdate || !canUpdate || useDisplayValue}\n            forbidDelete={forbidDelete || !canArchive || useDisplayValue}\n            editable={editable}\n            disabled={disabled}\n          />\n        </Grid>\n      );\n\n      if (this.canDrag()) {\n        cards.push(\n          <Draggable key={id} draggableId={id} index={index++}>\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                style={getItemStyle(\n                  snapshot.isDragging,\n                  provided.draggableProps.style,\n                  theme\n                )}\n              >\n                {item}\n              </div>\n            )}\n          </Draggable>\n        );\n      } else {\n        cards.push(item);\n      }\n    }\n\n    return cards;\n  }\n\n  handleOrdering = props => {\n    // TODO: shouldn't the ordering just be in the field and not have to be in this state?\n    this.setState(props, () => {\n      this.props.component.set({\n        order: this.state.sortBy\n          ? [[this.state.sortBy, this.state.sortOrder]]\n          : null\n      });\n    });\n  };\n\n  sortOptions() {\n    const { component } = this.props;\n    if (component && component.get('form')) {\n      const form = component.get('form');\n      const fieldsCanAccess = access.fieldsCanAccess('read', form);\n      const fields = [];\n      form.eachField(field => {\n        const name = field.get('name');\n\n        // Do we have access to the field? Allowed to sort? Not hidden? Not a button?\n        if (\n          fieldsCanAccess[name] !== undefined &&\n          !field.get('forbidSort') &&\n          !field.get('hidden') &&\n          !(field instanceof ButtonField)\n        ) {\n          fields.push({\n            value: (form.isDefaultField(name) ? '' : 'fieldValues.') + name,\n            label: field.get('label')\n          });\n        }\n      });\n      return fields;\n    }\n  }\n\n  header(numCards) {\n    const {\n      forbidCreate,\n      editable,\n      disabled,\n      component,\n      forbidSort,\n      store,\n      useDisplayValue\n    } = this.props;\n\n    const { sortBy, sortOrder } = this.state;\n\n    const singularLabel = component.getSingularLabel();\n\n    const reachedMax = component.reachedMax();\n\n    const canCreate = this.canCreate();\n\n    const showNewButton =\n      editable &&\n      !disabled &&\n      !useDisplayValue &&\n      !forbidCreate &&\n      !reachedMax &&\n      canCreate;\n\n    const canOrder = !forbidSort;\n\n    const sortOptions = this.sortOptions();\n\n    // Sorting only works when there is a backing store\n    const hasStore = !!store;\n    const showOrder = numCards > 0 && hasStore;\n\n    return (\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={6} lg={6}>\n          {showNewButton ? (\n            <Button\n              aria-label=\"new\"\n              onClick={this.handleNew}\n              icon=\"Add\"\n              label={'New ' + singularLabel}\n              marginTop={false}\n            />\n          ) : null}\n        </Grid>\n        <Grid item xs={12} sm={6} lg={6} align=\"right\">\n          {showOrder && canOrder ? (\n            <SelectOrder\n              onChange={this.handleOrdering}\n              sortBy={sortBy}\n              sortOrder={sortOrder}\n              options={sortOptions}\n            />\n          ) : null}\n        </Grid>\n      </Grid>\n    );\n  }\n\n  onDragEnd = result => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.index !== result.source.index) {\n      this.props.component.moveAndSaveForm({\n        sourceIndex: result.source.index,\n        destinationIndex: result.destination.index\n      });\n    }\n  };\n\n  // TODO: how to prevent re-rendering of all form-cards when dialog open state is changed? Or, does\n  // it not really matter as we are using PureComponents?\n  field() {\n    const {\n      forbidUpdate,\n      forbidDelete,\n      component,\n      spacerHeight,\n      classes,\n      isLoading,\n      form,\n      currentForm,\n      noResults,\n      disabled,\n      accessEditable,\n      useDisplayValue,\n      theme\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    const { confirmationOpen, confirmationTitle } = this.state;\n\n    const label = component.get('label').toLowerCase();\n\n    const canUpdate = this.canUpdate();\n    const canArchive = this.canArchive();\n\n    const spacerStyle = { height: spacerHeight };\n\n    const spacerId = component.get('spacerId');\n\n    let cards = this.cards(canUpdate, canArchive);\n\n    let cardContainer = cards;\n\n    if (this.canDrag()) {\n      cardContainer = (\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                style={getListStyle(snapshot.isDraggingOver, theme)}\n              >\n                {cards}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      );\n    }\n\n    const searchString = component.get('searchString');\n\n    // Is the user searching and there are no records?\n    const showNoRecords = searchString && noResults;\n\n    const header = this.header(cards.length);\n\n    return (\n      <div>\n        {header}\n\n        {showNoRecords ? (\n          <Typography variant=\"h4\">\n            <Icon icon=\"Info\" /> No {label} found\n          </Typography>\n        ) : null}\n\n        <div id={spacerId} className={classes.spacer} style={spacerStyle} />\n\n        <Grid container spacing={0}>\n          {cardContainer}\n        </Grid>\n\n        {isLoading ? <div className={classes.footer} /> : null}\n\n        {/* TODO: would it be better to have a single, global FormDialog instance? Or, is it better\n        to have multiple instances so that you can have different memory spaces. Currenly we have a\n        hybrid where we have a dialog per form. There is almost certainly more overhead in having an\n        instance per record, right? */}\n        <FormDialog\n          component={form}\n          currentForm={currentForm}\n          onClose={this.handleClose}\n          onCancel={this.handleCancel}\n          onSave={this.handleSave}\n          onEdit={this.handleEdit}\n          onDelete={this.handleDelete}\n          forbidUpdate={forbidUpdate || !canUpdate || dis || useDisplayValue}\n          forbidDelete={forbidDelete || !canArchive || dis || useDisplayValue}\n        />\n\n        <ConfirmationDialog\n          open={confirmationOpen}\n          onClose={this.handleConfirmationClose}\n          title={confirmationTitle}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { component, hideLabel } = this.props;\n\n    const isBlank = component.isBlank();\n\n    return (\n      <span>\n        {!hideLabel && (\n          <CommonField\n            component={component}\n            inlineLabel=\"true\"\n            shrinkLabel={!isBlank}\n          />\n        )}\n        {this.field()}\n      </span>\n    );\n  }\n}\n\nCollectionField = withStyles(styles, { withTheme: true })(CollectionField);\nCollectionField = attach([\n  'change',\n  'label',\n  'singularLabel',\n  'forbidCreate',\n  'forbidUpdate',\n  'forbidDelete',\n  'forbidSort',\n  'forbidOrder',\n  'editable',\n  'disabled',\n  'spacerHeight',\n  'bufferTopId',\n  'isLoading',\n  'form',\n  'currentForm',\n  'mode',\n  'noResults',\n  'store',\n  'maxColumns',\n  'useDisplayValue',\n  'hideLabel',\n  'showArchived',\n  'searchString',\n  'order'\n])(CollectionField);\nexport default CollectionField;\n","import React from 'react';\nimport Field from './field';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '../icon';\nimport FlexBreak from '../flex-break';\nimport attach from '../attach';\nimport HelpToolTip from './help-tool-tip';\n\nclass ListItemField extends React.PureComponent {\n  handleDelete = () => {\n    this.props.component.emit('delete');\n  };\n\n  render() {\n    // Note: allowDelete and help have to be passed in as a prop as it is really the parent's values\n    // that we need\n    const { component, allowDelete, help, disabled, editable } = this.props;\n\n    if (component) {\n      const block = component.get('block');\n      return (\n        <span>\n          <Field component={component} block={false} disabled={disabled} />\n          {allowDelete && !disabled && editable ? (\n            <IconButton aria-label=\"Delete\" onClick={this.handleDelete}>\n              <Icon icon=\"DeleteIcon\" />\n            </IconButton>\n          ) : null}\n          {help && editable ? <HelpToolTip help={help} /> : ''}\n          {block ? <FlexBreak /> : null}\n        </span>\n      );\n    } else {\n      // component can be falsy if it was just deleteed\n      return null;\n    }\n  }\n}\n\n// We want the component to update when the value changes as blank fields should not display a\n// delete button\nexport default attach(['value', 'disabled', 'editable'])(ListItemField);\n","import React from 'react';\nimport ListItemField from './list-item-field';\nimport attach from '../attach';\nimport Button from '../button';\nimport CommonField from './common-field';\n\nclass ListField extends React.PureComponent {\n  handleNew = () => {\n    this.props.component.createField();\n\n    // Reset the touched state so that errors aren't reported immediately when the user hasn't\n    // finished entering the new value.\n    this.props.component.set({ touched: false });\n  };\n\n  render() {\n    const {\n      component,\n      allowDelete,\n      useDisplayValue,\n      autoCreateFields,\n      hideLabel,\n      editable,\n      canDeleteEmpty,\n      accessEditable,\n      disabled,\n      hideDeleteButton\n    } = this.props;\n\n    const singularLabel = component.getSingularLabel();\n\n    const dis = accessEditable === false || disabled;\n\n    let fields = [];\n    let first = true;\n\n    const isBlank = component.isBlank();\n\n    component.eachField((field, index) => {\n      const fieldIsBlank = field.isBlank();\n\n      // When using the display value, we hide any blank fields, e.g. the empty \"next\" fields\n      if (first || !useDisplayValue || !fieldIsBlank) {\n        // We have to pass allowDelete as it is the allowDelete of the parent\n        fields.push(\n          <ListItemField\n            component={field}\n            key={index}\n            allowDelete={\n              allowDelete &&\n              !useDisplayValue &&\n              (canDeleteEmpty || !fieldIsBlank) &&\n              !hideDeleteButton\n            }\n            disabled={disabled}\n          />\n        );\n      }\n\n      if (first) {\n        first = false;\n      }\n    });\n\n    if (!autoCreateFields && !useDisplayValue && editable && !dis) {\n      fields.push(\n        <Button\n          key=\"button\"\n          aria-label=\"add\"\n          onClick={this.handleNew}\n          icon=\"Add\"\n          label={'Add ' + (singularLabel ? singularLabel : '')}\n          marginTop={false}\n        />\n      );\n    }\n\n    return (\n      <span>\n        {!hideLabel && (\n          <CommonField\n            component={component}\n            inlineLabel=\"true\"\n            marginBottom={false}\n            shrinkLabel={!isBlank}\n          />\n        )}\n        <div>{fields}</div>\n      </span>\n    );\n  }\n}\n\n// We want the component to update when we receive new fields\nexport default attach([\n  'change',\n  'help',\n  'allowDelete',\n  'useDisplayValue',\n  'autoCreateFields',\n  'hideLabel',\n  'value',\n  'editable',\n  'canDeleteEmpty',\n  'disabled',\n  'hideDeleteButton',\n  'singularLabel',\n  'label'\n])(ListField);\n","import React from 'react';\nimport attach from '../attach';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport globals from 'mson/lib/globals';\n\nconst styles = theme => ({\n  captcha: {\n    margin: theme.spacing.unit\n  }\n});\n\nclass ReCAPTCHAField extends React.PureComponent {\n  handleChange = value => {\n    this.props.component.setValue(value);\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      accessEditable,\n      classes,\n      useDisplayValue\n    } = this.props;\n\n    const isEditable = accessEditable !== false && editable && !disabled;\n\n    const siteKey = globals.get('reCAPTCHASiteKey');\n\n    if (isEditable && !useDisplayValue) {\n      return (\n        <div className={classes.captcha}>\n          <ReCAPTCHA\n            ref=\"recaptcha\"\n            sitekey={siteKey}\n            onChange={this.handleChange}\n          />\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nReCAPTCHAField = withStyles(styles)(ReCAPTCHAField);\n\nexport default attach(['disabled', 'editable', 'useDisplayValue'])(\n  ReCAPTCHAField\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Icon from '../icon';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\n\nconst styles = theme => ({\n  input: {\n    display: 'flex',\n    padding: 0,\n    minWidth: 240 // A good default for most labels\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n\n    // Adjust for MUI label\n    marginTop: theme.spacing.unit * 2 + 5\n  },\n  chip: {\n    margin: `${theme.spacing.unit / 1}px ${theme.spacing.unit / 4}px`\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === 'light'\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\n  },\n  singleValue: {\n    fontSize: theme.typography.subtitle1.fontSize\n  },\n  // placeholder: {\n  //   position: 'absolute',\n  //   left: 2,\n  //   fontSize: theme.typography.subtitle1.fontSize\n  // },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n\n    // Adjust for MUI label\n    // marginTop: theme.spacing.unit * 7\n    marginTop: theme.spacing.unit * 1\n  },\n  root: {\n    // Allow for help icon to be placed on right of field\n    display: 'inline-flex'\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  disabled: {\n    color: theme.palette.text.secondary\n  }\n});\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n  const optionalProps = {};\n  if (props.selectProps.fullWidth) {\n    optionalProps.fullWidth = true;\n  }\n  return (\n    <TextField\n      {...optionalProps}\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps\n        }\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n}\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\n// Note: kept in case we want to implement the placeholder in the future\n// function Placeholder(props) {\n//   return (\n//     <Typography\n//       color=\"textSecondary\"\n//       className={props.selectProps.classes.placeholder}\n//       {...props.innerProps}\n//     >\n//       {props.children}\n//     </Typography>\n//   );\n// }\n\nfunction SingleValue(props) {\n  return (\n    <Typography\n      className={classNames(\n        props.selectProps.classes.singleValue,\n        props.selectProps.isDisabled ? props.selectProps.classes.disabled : null\n      )}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction ValueContainer(props) {\n  return (\n    <div className={props.selectProps.classes.valueContainer}>\n      {props.children}\n    </div>\n  );\n}\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={classNames(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused,\n        [props.selectProps.classes.disabled]: props.selectProps.isDisabled\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<Icon icon=\"Cancel\" />}\n    />\n  );\n}\n\nfunction Menu(props) {\n  return (\n    <Paper\n      square\n      className={props.selectProps.classes.paper}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Paper>\n  );\n}\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  // Placeholder,\n  SingleValue,\n  ValueContainer\n};\n\nclass AutoCompleteSelect extends React.Component {\n  render() {\n    const {\n      classes,\n      options,\n      isClearable,\n      placeholder,\n      onChange,\n      onBlur,\n      onFocus,\n      onInputChange,\n      value,\n      isDisabled,\n      fullWidth,\n      isMulti\n    } = this.props;\n\n    const selectStyles = {\n      dropdownIndicator: base => ({\n        ...base,\n        cursor: 'pointer'\n      }),\n      clearIndicator: base => ({\n        ...base,\n        cursor: 'pointer'\n      }),\n\n      // Needed so that the menu appears above any dialog windows\n      menuPortal: base => ({\n        ...base,\n        zIndex: 2000\n      })\n    };\n\n    return (\n      <Select\n        className={classNames(classes.root, fullWidth && classes.fullWidth)}\n        classes={classes}\n        styles={selectStyles}\n        options={options}\n        components={components}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onInputChange={onInputChange}\n        placeholder={placeholder}\n        isClearable={isClearable}\n        isDisabled={isDisabled}\n        fullWidth={fullWidth}\n        isMulti={isMulti}\n        // Needed so that the menu is not clipped by the app's root level overflow:hidden or when it\n        // appears in a dialog window\n        menuPortalTarget={document.body}\n      />\n    );\n  }\n}\n\nexport default withStyles(styles)(AutoCompleteSelect);\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Input from '@material-ui/core/Input';\nimport Chip from '@material-ui/core/Chip';\nimport CommonField from './common-field';\nimport attach from '../attach';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DisplayValueTypography from './display-value-typography';\nimport AutoCompleteSelect from './autocomplete-select';\n\nconst styles = theme => ({\n  formControl: {\n    // Specify a more appropriate min width so that the field is wide enough to cover most labels\n    minWidth: 120\n  },\n  chip: {\n    margin: theme.spacing.unit / 4\n  }\n});\n\nclass SelectField extends React.PureComponent {\n  state = {\n    focus: false\n  };\n\n  handleChange(value) {\n    this.props.component.setValue(value);\n  }\n\n  handleAutocompleteChange(value) {\n    const { multiple } = this.props;\n    if (multiple) {\n      this.handleChange(value.map(val => val.value));\n    } else {\n      this.handleChange(value && (value.value ? value.value : null));\n    }\n  }\n\n  handleFocus() {\n    this.setState({ focus: true });\n  }\n\n  handleBlur() {\n    this.setState({ focus: false });\n    this.props.component.setTouched(true);\n  }\n\n  renderOptions() {\n    const { options, blankString, value, multiple } = this.props;\n\n    if (options) {\n      let opts = [];\n\n      if (!multiple && blankString) {\n        // Note: the blankString doesn't make sense when we allow multiple selections\n        opts.push(\n          <MenuItem value=\"\" key=\"\">\n            <em>{blankString}</em>\n          </MenuItem>\n        );\n      }\n\n      options.forEach(option => {\n        if (multiple) {\n          const checked = value ? value.indexOf(option.value) !== -1 : false;\n          opts.push(\n            <MenuItem value={option.value} key={option.value}>\n              <Checkbox checked={checked} />\n              <ListItemText primary={option.label} />\n            </MenuItem>\n          );\n        } else {\n          opts.push(\n            <MenuItem value={option.value} key={option.value}>\n              {option.label}\n            </MenuItem>\n          );\n        }\n      });\n\n      return opts;\n    }\n  }\n\n  render() {\n    const {\n      value,\n      err,\n      touched,\n      disabled,\n      component,\n      fullWidth,\n      classes,\n      editable,\n      multiple,\n      accessEditable,\n      useDisplayValue,\n      options,\n      autocomplete\n    } = this.props;\n\n    const { focus } = this.state;\n\n    const dis = accessEditable === false || disabled;\n\n    let fieldValue = multiple ? [] : '';\n    if (value) {\n      fieldValue = value;\n    }\n\n    let input = undefined;\n    let renderValue = undefined;\n    if (multiple) {\n      input = <Input />;\n\n      renderValue = selected => (\n        <div className={classes.chips}>\n          {selected.map(value => (\n            <Chip\n              key={value}\n              label={component.getOptionLabel(value)}\n              className={classes.chip}\n            />\n          ))}\n        </div>\n      );\n    }\n\n    const optionalProps = {};\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      if (autocomplete) {\n        let autocompleteValue = null;\n\n        if (multiple) {\n          autocompleteValue = fieldValue.map(value => ({\n            value: value,\n            label: component.getOptionLabel(value)\n          }));\n        } else {\n          autocompleteValue = {\n            value: fieldValue,\n            label: component.getOptionLabel(fieldValue)\n          };\n        }\n\n        // Shrink the label?\n        if (focus || !component.isValueBlank(fieldValue)) {\n          optionalProps.shrinkLabel = true;\n        }\n\n        fld = (\n          <AutoCompleteSelect\n            options={options}\n            isClearable={true}\n            placeholder=\"\"\n            onChange={value => this.handleAutocompleteChange(value)}\n            onBlur={() => this.handleBlur()}\n            onFocus={() => this.handleFocus()}\n            value={autocompleteValue}\n            isDisabled={dis}\n            fullWidth={fullWidth}\n            isMulti={multiple}\n          />\n        );\n      } else {\n        fld = (\n          <Select\n            multiple={multiple}\n            error={touched && err ? true : false}\n            onChange={event => this.handleChange(event.target.value)}\n            onBlur={() => this.handleBlur()}\n            input={input}\n            renderValue={renderValue}\n            value={fieldValue}\n            disabled={dis}\n            fullWidth={fullWidth}\n            className={classes.formControl}\n          >\n            {this.renderOptions()}\n          </Select>\n        );\n      }\n    } else {\n      let displayValue = null;\n      if (multiple && value) {\n        displayValue = value.map(val => (\n          <Chip\n            key={val}\n            label={component.getOptionLabel(val)}\n            className={classes.chip}\n          />\n        ));\n      } else {\n        displayValue = component.getDisplayValue();\n      }\n      fld = <DisplayValueTypography>{displayValue}</DisplayValueTypography>;\n    }\n\n    return (\n      <CommonField component={component} {...optionalProps}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nSelectField = withStyles(styles)(SelectField);\n\nexport default attach([\n  'value',\n  'err',\n  'options',\n  'touched',\n  'blankString',\n  'disabled',\n  'fullWidth',\n  'editable',\n  'multiple',\n  'useDisplayValue',\n  'autocomplete'\n])(SelectField);\n","import React from 'react';\nimport attach from '../attach';\nimport CommonField from './common-field';\nimport MuiPickersUtilsProvider from 'material-ui-pickers/MuiPickersUtilsProvider';\nimport DateFnsUtils from 'material-ui-pickers/utils/date-fns-utils';\nimport TimePicker from 'material-ui-pickers/TimePicker';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DisplayValueTypography from './display-value-typography';\n\nconst styles = theme => ({\n  root: {\n    // We need to add a margin as the picker doesn't play well with the Material-UI label\n    marginTop: theme.spacing.unit * 2\n  }\n});\n\nclass TimeField extends React.PureComponent {\n  handleDateChange = date => {\n    this.props.component.setValue(date);\n  };\n\n  handleBlur = () => {\n    this.props.component.setTouched(true);\n  };\n\n  render() {\n    const {\n      component,\n      classes,\n      value,\n      editable,\n      useDisplayValue,\n      showSeconds,\n      fullWidth,\n      disabled,\n      accessEditable\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    let shrinkLabel = false;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      // The picker doesn't play well with the label from Material-UI so we need to manually shrink\n      // the label when there is a value.\n      shrinkLabel = !!value;\n      fld = (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <span>\n            <TimePicker\n              // Value cannot be undefined or else picker will default to today\n              value={value ? value : null}\n              onChange={this.handleDateChange}\n              clearable\n              className={classes.root}\n              seconds={showSeconds}\n              // The minDate and maxDate are not used as they are confusing. They impose a\n              // restriction on the actual day, which doesn't make sense as the time is store as a\n              // timestamp with today's date and therefore the days may not match. Moreover, the\n              // picker doesn't change when these dates are specified so we can just handle the\n              // validation at the MSON-core layer. TODO: we can implement these ranges in the\n              // MSON-core layer by constructing dates with the current day and specified time from\n              // minDate and maxDate.\n              // minDate={minDate}\n              // maxDate={maxDate}\n\n              onClose={this.handleBlur}\n              fullWidth={fullWidth}\n              disabled={dis}\n              invalidDateMessage=\"\" // Let CommonField display the error\n              // format=\"M/d/YYYY h:m a\"\n            />\n          </span>\n        </MuiPickersUtilsProvider>\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography>\n          {component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return (\n      <CommonField component={component} shrinkLabel={shrinkLabel}>\n        {fld}\n      </CommonField>\n    );\n  }\n}\n\nTimeField = withStyles(styles)(TimeField);\n\nexport default attach([\n  'value',\n  'editable',\n  'useDisplayValue',\n  'showSeconds',\n  'fullWidth',\n  'disabled'\n])(TimeField);\n","import React from 'react';\nimport attach from './attach';\nimport Typography from '@material-ui/core/Typography';\nimport ReactMarkdown from 'react-markdown';\n\nclass Text extends React.PureComponent {\n  render() {\n    const { text } = this.props;\n\n    // We use component=div to force usage of a div, instead of a p, as properly formatted HTML\n    // cannot nest tags like h1 under a <p>.\n    return (\n      <Typography component=\"div\">\n        <ReactMarkdown source={text} />\n      </Typography>\n    );\n  }\n}\n\nText = attach(['text'])(Text);\nexport default Text;\n","import React from 'react';\nimport Input from '@material-ui/core/Input';\nimport CommonField from './common-field';\nimport attach from '../attach';\nimport DisplayValueTypography from './display-value-typography';\nimport MaskedInput from 'react-text-mask';\n\nclass TextField extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    // Create a custom TextMask component. This is done once in the constructor so that it is not\n    // done in each call to render()\n    this.TextMaskCustom = props => {\n      const { inputRef, ...other } = props;\n      const { mask } = this.props;\n\n      return <MaskedInput {...other} ref={inputRef} mask={mask} />;\n    };\n  }\n\n  handleChange = event => {\n    const { component } = this.props;\n    const value = component.fromUIValue(event.target.value);\n    component.setValue(value);\n  };\n\n  handleBlur = () => {\n    this.props.component.setTouched(true);\n  };\n\n  handleKeyUp = event => {\n    // If the user presses enter on the field then mark as touched. This is necessary for when the\n    // user is using the keyboard to enter data and there is an error on the last field that needs\n    // to be reported when the user presses enter.\n    if (event.keyCode === 13) {\n      this.props.component.setTouched(true);\n    }\n  };\n\n  render() {\n    const {\n      err,\n      maxLength,\n      touched,\n      disabled,\n      component,\n      fullWidth,\n      type,\n      editable,\n      accessEditable,\n      multiline,\n      rows,\n      rowsMax,\n      useDisplayValue,\n      mask,\n      displayValue\n    } = this.props;\n\n    const dis = accessEditable === false || disabled;\n\n    let fld = null;\n    if (editable && !useDisplayValue) {\n      const optional = {};\n      if (mask) {\n        optional.inputComponent = this.TextMaskCustom;\n      }\n      const uiValue = component.getUIValue();\n\n      fld = (\n        <Input\n          id={component.getUniqueId()}\n          error={touched && err ? true : false}\n          inputProps={{\n            maxLength: maxLength\n          }}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onKeyUp={this.handleKeyUp}\n          value={uiValue ? uiValue : ''}\n          disabled={dis}\n          fullWidth={fullWidth}\n          type={type}\n          multiline={multiline}\n          rows={rows}\n          rowsMax={rowsMax}\n          {...optional}\n        />\n      );\n    } else {\n      fld = (\n        <DisplayValueTypography>\n          {displayValue ? displayValue : component.getDisplayValue()}\n        </DisplayValueTypography>\n      );\n    }\n\n    return <CommonField component={component}>{fld}</CommonField>;\n  }\n}\n\nexport default attach([\n  'value',\n  'err',\n  'maxLength',\n  'touched',\n  'disabled',\n  'fullWidth',\n  'type',\n  'editable',\n  'multiline',\n  'rows',\n  'rowsMax',\n  'useDisplayValue',\n  'mask',\n  'unmask'\n])(TextField);\n","import React from 'react';\nimport TextField from './text-field';\nimport attach from '../attach';\n\nclass URLField extends React.PureComponent {\n  render() {\n    const {\n      component,\n      value,\n      editable,\n      useDisplayValue,\n      newWindow\n    } = this.props;\n\n    let displayValue = null;\n\n    // Note: editable & useDisplayValue are checked to avoid unnecessary rendering\n    if ((!editable || useDisplayValue) && value) {\n      let href = value;\n      if (href.indexOf('http') !== 0) {\n        href = 'http://' + href;\n      }\n      displayValue = (\n        <a href={href} target={newWindow ? '_blank' : '_self'}>\n          {value}\n        </a>\n      );\n    }\n\n    return <TextField component={component} displayValue={displayValue} />;\n  }\n}\n\nexport default attach(['value', 'editable', 'useDisplayValue', 'newWindow'])(\n  URLField\n);\n","// NOTE: this file should only contain the component registrations\n\nimport ButtonField from './fields/button-field';\nimport BooleanField from './fields/boolean-field';\nimport Card from './card';\nimport ComponentField from './fields/component-field';\nimport CompositeField from './fields/composite-field';\nimport DateField from './fields/date-field';\nimport Field from './fields/field';\nimport Form from './form';\nimport FormField from './fields/form-field';\nimport CollectionField from './fields/collection-field';\nimport ListField from './fields/list-field';\nimport ReCAPTCHAField from './fields/re-captcha-field';\nimport SelectField from './fields/select-field';\nimport TimeField from './fields/time-field';\nimport Text from './text';\nimport TextField from './fields/text-field';\nimport URLField from './fields/url-field';\n\nexport default {\n  ButtonField,\n  BooleanField,\n  Card,\n  ChainedSelectField: CompositeField,\n  ChainedSelectListField: ListField,\n  ComponentField,\n  CompositeField,\n  DateField,\n  Field,\n  Form,\n  FormField,\n  CollectionField,\n  IdField: TextField,\n  IntegerField: TextField,\n  ListField,\n  MoneyField: TextField,\n  NumberField: TextField,\n  PhoneField: TextField,\n  ReCAPTCHAField,\n  SelectField,\n  SelectListField: ListField,\n  TimeField,\n  Text,\n  TextField,\n  TextListField: ListField,\n  URLField,\n  User: Form\n};\n","import components from './components';\nimport compiler from 'mson/lib/compiler';\n\nclass Utils {\n  getUIComponent(component) {\n    const name = component.getClassName();\n    const Component = components[name];\n    if (Component !== undefined) {\n      return Component;\n    } else if (compiler.isCompiled(compiler.getComponent(name))) {\n      const Parent = Object.getPrototypeOf(component.constructor);\n      return this.getUIComponent(new Parent());\n    } else {\n      // The React component wasn't found so check the MSON layer to see if we can automatically\n      // determine the component from any MSON.\n      const ancestorName = compiler.getOldestCompiledAncestor(name);\n      const Ancestor = compiler.getComponent(ancestorName);\n      return this.getUIComponent(new Ancestor());\n    }\n  }\n}\n\nexport default new Utils();\n","import React from 'react';\nimport componentUtils from './component-utils';\n\nexport default class InnerComponent extends React.PureComponent {\n  handleChange = (name, value) => {\n    const { on, component } = this.props;\n\n    // Generic handler\n    if (on) {\n      on({ name, value, component });\n    }\n\n    // Handler for specific event\n    const handlerName = 'on' + name.charAt(0).toUpperCase() + name.slice(1);\n    if (this.props[handlerName]) {\n      this.props[handlerName]({ value, component });\n    }\n  };\n\n  addChangeListener() {\n    this.props.component.on('$change', this.handleChange);\n\n    // Emit a mount event so that the component can load any initial data, etc... We emit this event\n    // here and not in componentDidMount() as the component may actually be set after\n    // componentDidMount() was run.\n    this.props.component.emitChange('mount');\n  }\n\n  removeChangeListener() {\n    this.props.component.removeListener('$change', this.handleChange);\n  }\n\n  componentDidMount() {\n    if (this.props.component) {\n      this.addChangeListener();\n    }\n  }\n\n  componentWillUnmount() {\n    // Emit a unmount event so that we can perform any needed clean up\n    this.props.component.emitChange('unmount');\n\n    this.removeChangeListener();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Is the component changing?\n    if (this.props.component !== prevProps.component) {\n      // Recreate the listener\n      this.removeChangeListener();\n      this.addChangeListener();\n    }\n  }\n\n  render() {\n    const { component, ...others } = this.props;\n\n    if (component) {\n      const Component = componentUtils.getUIComponent(component);\n      return <Component component={component} {...others} />;\n    } else {\n      return null;\n    }\n  }\n}\n","import React from 'react';\nimport InnerComponent from './inner-component';\nimport compiler from 'mson/lib/compiler';\n\nexport default class Component extends React.PureComponent {\n  state = { component: null };\n\n  createComponent() {\n    const { definition } = this.props;\n    this.setState({ component: compiler.newComponent(definition) });\n  }\n\n  componentDidMount() {\n    if (this.props.definition) {\n      this.createComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    const { component } = this.state;\n\n    // Did we use a definition to define a component in the state?\n    if (component) {\n      // Fire the unmount before we destroy the component so that the event is not lost\n      component.emitChange('unmount');\n\n      // Remove all listeners to prevent listener leaks\n      this.state.component.destroy();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // Is the definition changing?\n    if (this.props.definition !== prevProps.definition) {\n      this.createComponent();\n    }\n  }\n\n  render() {\n    const { definition, component, ...childProps } = this.props;\n    let comp = component;\n\n    // Should we use the component generated from the definition?\n    if (!component) {\n      comp = this.state.component;\n    }\n\n    return <InnerComponent component={comp} {...childProps} />;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n// import Button from '@material-ui/core/Button';\nimport SnackbarMUI from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from './icon';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing.unit / 2\n  }\n});\n\nclass Snackbar extends React.PureComponent {\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    if (this.props.onClose) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { classes, message, open } = this.props;\n    return (\n      <SnackbarMUI\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left'\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={this.handleClose}\n        ContentProps={{\n          'aria-describedby': 'message-id'\n        }}\n        message={<span id=\"message-id\">{message}</span>}\n        action={[\n          // <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleClose}>\n          //   UNDO\n          // </Button>,\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={this.handleClose}\n          >\n            <Icon icon=\"Close\" />\n          </IconButton>\n        ]}\n      />\n    );\n  }\n}\n\nSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Snackbar);\n","// TODO:\n//   - On mobile when using search bar, display title and search icon. When user clicks icon then\n//     hides title and allows for search string to be entered.\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from './icon';\nimport Menu from './menu';\nimport SearchBar from './search-bar';\nimport Switch from 'react-router-dom/Switch';\nimport Route from 'react-router-dom/Route';\nimport Component from './component';\n// import compiler from 'mson/lib/compiler';\nimport withRouter from 'react-router/withRouter';\nimport attach from './attach';\nimport globals from 'mson/lib/globals';\nimport Snackbar from './snackbar';\nimport ConfirmationDialog from './confirmation-dialog';\nimport MUISwitch from '@material-ui/core/Switch';\n// import UserMenu from './user-menu';\nimport Action from 'mson/lib/actions/action';\nimport CollectionField from 'mson/lib/fields/collection-field';\nimport Form from 'mson/lib/form';\nimport access from 'mson/lib/access';\nimport registrar from 'mson/lib/compiler/registrar';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    // height: 430,\n    // marginTop: theme.spacing.unit * 3,\n    zIndex: 1,\n    overflow: 'hidden'\n  },\n  appFrame: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    height: '100%'\n  },\n  appBar: {\n    position: 'fixed',\n    marginLeft: drawerWidth\n  },\n  appBarResponsive: {\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    }\n  },\n  navIconHide: {\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  },\n  content: {\n    backgroundColor: theme.palette.background.default,\n    width: '100%',\n    padding: theme.spacing.unit * 3,\n    height: 'calc(100% - 56px)',\n    marginTop: 56,\n    [theme.breakpoints.up('sm')]: {\n      height: 'calc(100% - 64px)',\n      marginTop: 64\n    },\n\n    // Disable Chrome's Scroll Anchoring as it causes problems with inifinite scrolling when\n    // scrolling up. Specifically, the scroll location is locked after items are prepended to the\n    // top of the list before the spacer is resized.\n    overflowAnchor: 'none'\n  },\n  contentResponsive: {\n    // Also needed to extend menu vertically\n    [theme.breakpoints.up('md')]: {\n      marginLeft: drawerWidth\n    }\n  },\n  searchBar: {\n    // marginLeft: theme.spacing.unit * 3, // left align\n    marginLeft: 'auto' // right align\n  }\n});\n\nclass App extends React.PureComponent {\n  state = {\n    mobileOpen: false,\n    menuItem: null,\n    snackbarOpen: false,\n    snackbarMessage: '',\n    confirmationOpen: false,\n    nextMenuItem: null,\n    showArchivedToggle: false,\n\n    // Note: we need both searchString and globals.searchString as searchString is the controlled\n    // value for the text input and globals.searchString is the actual string with which we are\n    // searching.\n    searchString: '',\n    showSearch: false\n\n    // isLoggedIn: false\n  };\n\n  form = null;\n\n  path = null;\n\n  constructor(props) {\n    super(props);\n    this.setGlobalOnNavigate();\n  }\n\n  onNavigate = callback => {\n    // We don't warn about discarding changes when fullScreen, e.g. a login page\n    const menuItem = this.state.menuItem;\n    if (\n      menuItem &&\n      menuItem.content.has('dirty') &&\n      menuItem.content.get('dirty') &&\n      !menuItem.fullScreen\n    ) {\n      // Show a confirmation dialog to see if the user wants to continue\n      globals.displayConfirmation({\n        title: 'Discard changes?',\n        callback\n      });\n    } else {\n      // Nothing is dirty so allow the navigation to continue\n      callback(true);\n    }\n  };\n\n  setGlobalOnNavigate() {\n    globals.setOnNavigate(this.onNavigate);\n  }\n\n  handleDrawerToggle = () => {\n    this.setState({ mobileOpen: !this.state.mobileOpen });\n  };\n\n  redirect(path) {\n    const { history } = this.props;\n\n    // Clear the redirectPath so that back-to-back redirects to the same route are considered\n    // unique, e.g. if / routes to /somepage and then the user hits back.\n    globals.set({ redirectPath: null });\n\n    history.push(path);\n  }\n\n  navigateTo(path) {\n    const { menuItem } = this.state;\n    const { component } = this.props;\n    const menu = component.get('menu');\n\n    // if (path === '/home') {\n    //   // Redirect so that user sees the actual path and not /home\n    //   history.push(menu.getFirstItem().path);\n    // } else\n    if (!menuItem || path !== menuItem.path) {\n      // if (this.requireAccess(menu.get('roles'))) {\n      // The route is changing\n      const item = menu.getItemAndParsePath(path);\n      return this.switchContent(item.item, item.params);\n      // }\n    }\n  }\n\n  handleNavigate = async (menuItem, force) => {\n    // Is the next item just an action?\n    if (menuItem.content instanceof Action) {\n      // Execute the actions\n      await menuItem.content.run();\n    } else {\n      this.props.history.push(menuItem.path);\n    }\n  };\n\n  handleConfirmationClose = async yes => {\n    const { confirmation } = this.props;\n    if (confirmation.callback && yes) {\n      // Allow/prohibit the route change\n      confirmation.callback(yes);\n    }\n    this.setState({ confirmationOpen: false });\n  };\n\n  canArchive() {\n    let canArchive = false;\n    let canSearch = false;\n    if (this.component && this.component instanceof Form) {\n      for (const field of this.component.getFields()) {\n        if (field instanceof CollectionField) {\n          canArchive =\n            !field.get('forbidViewArchived') &&\n            access.canArchive(field.get('form'));\n          canSearch = !field.get('forbidSearch');\n        }\n      }\n    }\n    return {\n      canArchive,\n      canSearch\n    };\n  }\n\n  emitLoggedOut() {\n    globals.set({ redirectAfterLogin: this.props.location.pathname });\n    this.props.component.emitLoggedOut();\n  }\n\n  requireAccess(roles) {\n    const canAccess =\n      !roles || (registrar.client && registrar.client.user.hasRole(roles));\n    if (!canAccess) {\n      this.emitLoggedOut();\n    }\n    return canAccess;\n  }\n\n  switchContent = async (menuItem, parameters) => {\n    // Prevent inifinite recursion when menuItem is null by making sure that the menuItem is\n    // changing before changing anything, especially the state\n    if (menuItem !== this.state.menuItem) {\n      if (this.component) {\n        // Emit an unload event so that the component can unload any data, etc...\n        this.component.emitUnload();\n      }\n\n      // Note: menuItem can be null if there is no content on the landing page\n      const isAction = menuItem && menuItem.content instanceof Action;\n\n      // Note: menuItem.content can be an action if the user goes directly to a route where the\n      // content is an action\n      if (menuItem && menuItem.content) {\n        const { location, component } = this.props;\n        const menu = component.get('menu');\n        globals.set({\n          route: menu.toRoute({\n            parameters,\n            queryString: location.search.substr(1),\n            hash: location.hash.substr(1)\n          })\n        });\n\n        const parentItem = menu.getParent(menuItem.path);\n        if (\n          this.requireAccess(menuItem.roles) &&\n          (!parentItem || this.requireAccess(parentItem.roles))\n        ) {\n          if (isAction) {\n            // Execute the actions\n            await menuItem.content.run();\n          } else {\n            // Instantiate form\n            // this.component = compiler.newComponent(menuItem.content.component);\n            this.component = menuItem.content;\n\n            // Emit a load event so that the component can load any initial data, etc...\n            this.component.emitLoad();\n\n            const { canArchive, canSearch } = this.canArchive();\n\n            globals.set({ searchString: null });\n\n            // Set showArchived to false whenever we change the route\n            this.setState({\n              menuItem,\n              showArchived: false,\n              showArchivedToggle: canArchive,\n              searchString: '',\n              showSearch: canSearch\n            });\n          }\n        }\n      } else {\n        this.component = null;\n      }\n    }\n  };\n\n  onLocation = location => {\n    globals.set({ path: location.pathname });\n  };\n\n  // TODO: move logic to componentDidUpdate\n  componentWillUpdate(props) {\n    const snackbarMessage = globals.get('snackbarMessage');\n    if (snackbarMessage) {\n      this.displaySnackbar(snackbarMessage);\n      globals.set({ snackbarMessage: null });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.redirectPath &&\n      this.props.redirectPath !== prevProps.redirectPath\n    ) {\n      this.redirect(this.props.redirectPath);\n    }\n\n    if (this.props.path !== prevProps.path) {\n      this.navigateTo(this.props.path);\n    }\n\n    if (this.props.confirmation !== prevProps.confirmation) {\n      // Show the popup if any of the confirmation info has changed\n      this.setState({ confirmationOpen: true });\n    }\n\n    if (this.props.searchString !== prevProps.searchString) {\n      // Pass search string down to current component\n      const menuItem = this.state.menuItem;\n      if (menuItem && menuItem.content.has('searchString')) {\n        menuItem.content.set({\n          searchString: this.props.searchString\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    // TODO: is this too inefficient in that it cascades a lot of unecessary events? Instead, could:\n    // 1. move more logic to app layer so that only cascade when need new window 2. use something\n    // like a global scroll listener that the component can use when it is active\n    window.addEventListener('scroll', e => {\n      if (this.state.menuItem) {\n        this.state.menuItem.content.emit('scroll', e);\n      }\n    });\n\n    // Handle immediate redirects, e.g. if user is not logged in\n    if (this.props.redirectPath) {\n      this.redirect(this.props.redirectPath);\n    }\n  }\n\n  componentWillMount() {\n    // Allows us to listen to back and forward button clicks\n    this.unlisten = this.props.history.listen(this.onLocation);\n\n    Promise.resolve()\n      .then(() => {\n        if (registrar.client) {\n          // Wait for the session to load before loading the initial component so that we can do things\n          // like route based on a user's role\n          registrar.client.user.awaitSession();\n        }\n      })\n      .then(() => {\n        // Load the correct component based on the initial path\n        this.onLocation(this.props.location);\n      });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  displaySnackbar(message) {\n    this.setState({ snackbarOpen: true, snackbarMessage: message });\n  }\n\n  handleSnackbarClose = () => {\n    this.setState({ snackbarOpen: false });\n  };\n\n  handleArchivedChange = event => {\n    this.setState({ showArchived: event.target.checked });\n\n    const { menuItem } = this.state;\n\n    if (menuItem) {\n      menuItem.content.set({ showArchived: event.target.checked });\n\n      // Scroll to the top of the page as otherwise it is confusing to the user as to why they are\n      // dumped in some random place within the newly queried data.\n      window.scrollTo({\n        top: 0\n      });\n    }\n  };\n\n  handleSearchStringChange = event => {\n    this.setState({\n      searchString: event.target.value\n    });\n  };\n\n  render() {\n    const {\n      classes,\n      component,\n      confirmation,\n      menuAlwaysTemporary\n    } = this.props;\n    const {\n      mobileOpen,\n      menuItem,\n      snackbarOpen,\n      snackbarMessage,\n      confirmationOpen,\n      showArchived,\n      showArchivedToggle,\n      // path,\n      searchString,\n      showSearch\n      // isLoggedIn\n    } = this.state;\n\n    const responsive = !menuAlwaysTemporary;\n\n    const menu = component.get('menu');\n\n    // Use the path from the location prop as this.state.path may not be up to date\n    const path = this.props.location.pathname;\n\n    const comp = this.component ? (\n      <Component component={this.component} />\n    ) : null;\n\n    // A component must not switch from controlled to uncontrolled so we need to avoid setting\n    // checked=undefined\n    const showArchivedChecked = showArchived ? true : false;\n\n    let archivedToggle = null;\n    if (showArchivedToggle) {\n      archivedToggle = (\n        <Tooltip title={showArchived ? 'Show Active' : 'Show Deleted'}>\n          <MUISwitch\n            onChange={this.handleArchivedChange}\n            checked={showArchivedChecked}\n          />\n        </Tooltip>\n      );\n    }\n\n    let searchBox = null;\n    if (showSearch) {\n      searchBox = (\n        <SearchBar\n          className={classes.searchBar}\n          searchString={searchString}\n          onChange={this.handleSearchStringChange}\n        />\n      );\n    }\n\n    const appBar = (\n      <AppBar\n        elevation={1} // tone down the elevation\n        className={\n          classes.appBar + (responsive ? ` ${classes.appBarResponsive}` : '')\n        }\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={this.handleDrawerToggle}\n            className={responsive ? classes.navIconHide : ''}\n          >\n            <Icon icon=\"Menu\" />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            {menuItem ? menuItem.label : ''}\n          </Typography>\n\n          {archivedToggle}\n\n          {searchBox}\n\n          {/*\n          <UserMenu isLoggedIn={isLoggedIn} />\n          */}\n        </Toolbar>\n      </AppBar>\n    );\n\n    const menuSidebar = (\n      <Menu\n        component={menu}\n        onDrawerToggle={this.handleDrawerToggle}\n        mobileOpen={mobileOpen}\n        onNavigate={this.handleNavigate}\n        path={path}\n        responsive={responsive}\n      />\n    );\n\n    let fullScreenStyle = null;\n    if (menuItem && menuItem.fullScreen) {\n      fullScreenStyle = {\n        marginLeft: 0,\n        marginTop: 0\n      };\n    }\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.appFrame}>\n          {menuItem && menuItem.fullScreen ? null : appBar}\n          {menuItem && menuItem.fullScreen ? null : menuSidebar}\n          <main\n            className={\n              classes.content +\n              (responsive ? ` ${classes.contentResponsive}` : '')\n            }\n            style={fullScreenStyle}\n          >\n            <Switch>\n              {/* Omitting path so that all paths are matched */}\n              <Route />\n            </Switch>\n\n            {comp}\n\n            <Snackbar\n              open={snackbarOpen}\n              message={snackbarMessage}\n              onClose={this.handleSnackbarClose}\n            />\n            <ConfirmationDialog\n              open={confirmationOpen}\n              onClose={this.handleConfirmationClose}\n              title={confirmation ? confirmation.title : null}\n              text={confirmation ? confirmation.text : null}\n              alert={confirmation ? confirmation.alert : null}\n            />\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nApp = withStyles(styles, { withTheme: true })(App);\nApp = withRouter(App);\nApp = attach(['menuAlwaysTemporary'])(App);\nApp = attach(\n  ['path', 'redirectPath', 'snackbarMessage', 'confirmation', 'searchString'],\n  globals\n)(App);\nexport default App;\n","import React from 'react';\nimport AppUI from './app';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport BrowserRouter from 'react-router-dom/BrowserRouter';\nimport Prompt from 'react-router-dom/Prompt';\nimport globals from 'mson/lib/globals';\nimport attach from './attach';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blueGrey,\n    // primary: blue,\n    // type: 'dark',\n    // secondary: cyan\n    secondary: lightBlue\n  },\n\n  // TODO: remove after next major Material-UI release\n  // (https://material-ui.com/style/typography/#migration-to-typography-v2)\n  typography: {\n    useNextVariants: true\n  }\n\n  // shadows: ['none']\n});\n\n// Note: BrowserRouter needs to be outside of App so that we can use withRouter\nclass AppContainer extends React.Component {\n  onNavigate = (message, callback) => {\n    globals.onNavigate(message, callback);\n  };\n\n  render() {\n    const { component, basename } = this.props;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <BrowserRouter\n          getUserConfirmation={this.onNavigate}\n          basename={basename}\n        >\n          {/* Wrapping div required by BrowserRouter */}\n          <div>\n            <AppUI component={component} />\n\n            {/* A Prompt is needed to capture back/forward button events with ReactRouter. message\n            is required, but the value is arbitrary */}\n            <Prompt message=\"foo\" />\n          </div>\n        </BrowserRouter>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default attach(['basename'])(AppContainer);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './app-container';\nimport registrar from 'mson/lib/compiler/registrar';\nimport registerServiceWorker from './register-service-worker';\n\nexport default async app => {\n  // Was the client registered?\n  if (registrar.client) {\n    // Make sure we load the session before doing any rendering so that components can do their\n    // initial rendering based on the user's authentication status\n    await registrar.client.user.awaitSession();\n  }\n\n  ReactDOM.render(\n    <AppContainer component={app} />,\n    document.getElementById('root')\n  );\n  registerServiceWorker();\n};\n","export default {\n  name: 'app.App',\n  component: 'App',\n  // menuAlwaysTemporary: true,\n  basename: '/mson-react', // Root of site is https://redgeoff.github.io/mson-react\n  menu: {\n    component: 'Menu',\n    items: [\n      {\n        path: '/',\n        label: 'Home',\n        content: {\n          component: 'app.Home'\n        }\n      },\n      {\n        path: '/fields',\n        label: 'Fields',\n        content: {\n          component: 'app.FieldsScreen'\n        }\n      },\n      {\n        path: '/contacts',\n        label: 'Contacts',\n        items: [\n          {\n            path: '/contacts',\n            label: 'Contacts LocalStorage',\n            content: {\n              component: 'app.ContactsLocalStorage'\n            }\n          },\n          {\n            path: '/contacts-firebase',\n            label: 'Contacts Firebase',\n            content: {\n              component: 'app.ContactsFirebase'\n            }\n          }\n        ]\n      },\n      {\n        path: '/tasks',\n        label: 'Tasks',\n        items: [\n          {\n            path: '/tasks',\n            label: 'Tasks LocalStorage',\n            content: {\n              component: 'app.TasksLocalStorage'\n            }\n          },\n          {\n            path: '/tasks-firebase',\n            label: 'Tasks Firebase',\n            content: {\n              component: 'app.TasksFirebase'\n            }\n          }\n        ]\n      },\n      {\n        path: '/form-editor',\n        label: 'Form Editor',\n        content: {\n          component: 'app.FormEditor'\n        }\n      },\n      {\n        path: '/contact/edit',\n        label: 'Edit Contact',\n        content: {\n          component: 'app.EditContact'\n        }\n      },\n      {\n        path: '/contact-no-mson',\n        label: 'Contact No MSON',\n        content: {\n          component: 'app.ContactNoMSON'\n        }\n      }\n    ]\n  }\n};\n","import Form from 'mson/lib/form';\nimport { TextField, EmailField, ButtonField } from 'mson/lib/fields';\nimport compiler from 'mson/lib/compiler';\nimport globals from 'mson/lib/globals';\n\n// Note: you can also use the following instead of the import above\n// const Form = compiler.getCompiledComponent('Form');\n\nclass ContactNoMSON extends Form {\n  _create(props) {\n    super._create(props);\n\n    this.set({\n      fields: [\n        new TextField({\n          name: 'firstName',\n          label: 'First Name',\n          required: true,\n          block: false\n        }),\n        new TextField({ name: 'lastName', label: 'Last Name', required: true }),\n        new EmailField({ name: 'email', label: 'Email' }),\n        new ButtonField({\n          name: 'import',\n          label: 'Import',\n          icon: 'ImportContacts'\n        }),\n        new ButtonField({\n          name: 'submit',\n          label: 'Submit',\n          type: 'submit',\n          icon: 'Save'\n        }),\n        new ButtonField({ name: 'cancel', label: 'Cancel', icon: 'Cancel' })\n      ]\n    });\n\n    this.on('import', () => {\n      this.setValues({\n        firstName: 'Prince',\n        lastName: 'Nelson',\n        email: 'prince@example.com'\n      });\n    });\n\n    this.on('submit', () => {\n      // TODO: do something like contact an API\n\n      const values = this.getValues();\n      console.log('submitting', values);\n\n      globals.displaySnackbar(\n        `Submitted ${values.firstName} ${values.lastName}`\n      );\n    });\n\n    this.on('cancel', () => {\n      // Redirect home\n      globals.redirect('/');\n    });\n  }\n}\n\ncompiler.registerComponent('app.ContactNoMSON', ContactNoMSON);\n","export default {\n  name: 'app.Contacts',\n  component: 'Form',\n  schema: {\n    component: 'Form',\n    fields: [\n      {\n        name: 'store',\n        component: 'Field'\n      }\n    ]\n  },\n  fields: [\n    {\n      component: 'CollectionField',\n      name: 'contacts',\n      label: 'Contacts',\n      hideLabel: true,\n      // forbidCreate: true,\n      // forbidUpdate: true,\n      // forbidDelete: true,\n      // forbidViewArchived: true,\n      // forbidSearch: true,\n      // forbidSort: true,\n      formFactory: {\n        component: 'Factory',\n        product: {\n          component: 'Form',\n          fields: [\n            {\n              name: 'firstName',\n              component: 'TextField',\n              label: 'First Name',\n              required: true,\n              block: false\n            },\n            {\n              name: 'lastName',\n              component: 'TextField',\n              label: 'Last Name'\n            },\n            {\n              name: 'email',\n              component: 'EmailField',\n              label: 'Email'\n            }\n          ]\n        }\n      },\n      store: '{{store}}'\n    }\n  ]\n};\n","export default {\n  name: 'app.ContactsLocalStorage',\n  component: 'app.Contacts',\n  store: {\n    component: 'LocalStorageStore',\n    storeName: 'contactsLocalStorage'\n  }\n};\n","export default {\n  name: 'app.ContactsFirebase',\n  component: 'app.Contacts',\n  store: {\n    component: 'FirebaseStore',\n    apiKey: 'AIzaSyCJfqjdBBrXtwkXla6uMX3LZGOLDAgTEx0',\n    authDomain: 'mson-contacts.firebaseapp.com',\n    projectId: 'mson-contacts',\n    collection: 'contacts'\n  }\n};\n","export default {\n  name: 'app.EditContact',\n  component: 'RecordEditor',\n  baseForm: {\n    component: 'Form',\n    fields: [\n      {\n        name: 'firstName',\n        component: 'TextField',\n        label: 'First Name',\n        required: true,\n        block: false\n      },\n      {\n        name: 'lastName',\n        component: 'TextField',\n        label: 'Last Name'\n      },\n      {\n        name: 'email',\n        component: 'EmailField',\n        label: 'Email'\n      }\n    ],\n    listeners: [\n      {\n        event: 'load',\n        actions: [\n          {\n            // Default the id to '1' so that we can edit the doc later. Usually, this id would come\n            // from the route or the user's session\n            component: 'Set',\n            name: 'fields.id.value',\n            value: '1'\n          }\n        ]\n      }\n    ]\n  },\n  label: 'Contact',\n  store: {\n    component: 'LocalStorageStore',\n    storeName: 'contactLocalStorage'\n  },\n  storeWhere: {\n    id: '1'\n  }\n};\n","export default {\n  name: 'app.FieldsScreen',\n  component: 'app.Fields',\n  fields: [\n    {\n      name: 'import',\n      component: 'ButtonField',\n      label: 'Import',\n      icon: 'ImportContacts'\n    },\n    {\n      name: 'reset',\n      component: 'ButtonField',\n      label: 'Reset',\n      icon: 'ClearAll'\n    },\n    {\n      name: 'toggleDisplayValues',\n      component: 'ButtonField',\n      label: 'Show Display Values',\n      icon: 'ViewHeadline'\n    },\n    {\n      name: 'toggleEditable',\n      component: 'ButtonField',\n      label: 'Immutable',\n      icon: 'NotInterested'\n    },\n    {\n      name: 'toggleDisabled',\n      component: 'ButtonField',\n      label: 'Disable',\n      icon: 'Lock'\n    },\n    {\n      name: 'toggleFullWidth',\n      component: 'ButtonField',\n      label: 'Full Width',\n      icon: 'FormatAlignJustify'\n    },\n    {\n      name: 'log',\n      component: 'ButtonField',\n      label: 'Log Values',\n      icon: 'MoveToInbox'\n    }\n  ],\n  listeners: [\n    {\n      event: 'import',\n      actions: [\n        {\n          component: 'Set',\n          name: 'component',\n          value: {\n            'fields.addressField.value': {\n              addressLine1: '121 Pike Street',\n              addressLine2: 'Suite 201',\n              city: 'Seatte',\n              stateProvince: 'WA',\n              postalCode: '98107',\n              country: 'US'\n            },\n            'fields.booleanField.value': true,\n            'fields.chainedSelectField.value': [2, 5, 9, 10],\n            'fields.chainedSelectListField.value': [[1, 3, 7], [2, 5, 9, 10]],\n            'fields.cityField.value': 'Seattle',\n            'fields.collectionField.value': [\n              {\n                id: 'daenerys',\n                firstName: 'Daenerys',\n                lastName: 'Targaryen'\n              },\n              {\n                id: 'jon',\n                firstName: 'Jon',\n                lastName: 'Snow'\n              },\n              {\n                id: 'tyrion',\n                firstName: 'Tyrion',\n                lastName: 'Lannister'\n              }\n            ],\n            'fields.countryField.value': 'US',\n            'fields.dateField.value': '2018-09-27T17:24:24.960Z',\n            'fields.emailField.value': 'test@example.com',\n            'fields.formField.value': {\n              github: 'github.com/redgeoff',\n              medium: 'medium.com/@redgeoff',\n              twitter: 'twitter.com/redgeoff7'\n            },\n            // 'fields.github.value': 'github.com/redgeoff',\n            // 'fields.medium.value': 'medium.com/@redgeoff',\n            // 'fields.twitter.value': 'twitter.com/redgeoff7',\n            'fields.idField.value': 'id-123',\n            'fields.integerField.value': 123,\n            'fields.listFieldEmail.value': [\n              'test1@example.com',\n              'test2@example.com'\n            ],\n            'fields.listFieldName.value': [\n              { firstName: 'Ella', lastName: 'Fitzgerald' },\n              { firstName: 'Ray', lastName: 'Charles' }\n            ],\n            'fields.moneyField.value': 1000000.11,\n            'fields.numberField.value': 123.4,\n            'fields.passwordField.value': 'password123',\n            'fields.personFullNameField.value': {\n              firstName: 'Daenerys',\n              lastName: 'Targaryen'\n            },\n            'fields.personNameField.value': 'Daenerys',\n            'fields.phoneField.value': '6461234567',\n            'fields.postalCodeField.value': '98107',\n            'fields.provinceField.value': 'British Columbia',\n            'fields.selectField.value': 'red',\n            'fields.selectFieldMult.value': ['red', 'blue'],\n            'fields.selectListField.value': ['red', 'green'],\n            'fields.stateField.value': 'WA',\n            'fields.timeField.value': '2018-09-27T17:24:24.960Z',\n            'fields.textField.value': 'Go MSON',\n            'fields.textListField.value': ['MSON', 'React', 'Material-UI'],\n            'fields.urlField.value': 'mson.co'\n          }\n        }\n      ]\n    },\n    {\n      event: 'reset',\n      actions: [\n        {\n          component: 'Set',\n          name: 'reset',\n          value: true\n        }\n      ]\n    },\n    {\n      event: 'toggleDisplayValues',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.useDisplayValue': {\n              $ne: true\n            }\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                eachField: {\n                  useDisplayValue: true\n                },\n                'fields.toggleDisplayValues': {\n                  label: 'Hide Display Values',\n                  icon: 'Input'\n                }\n              }\n            }\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                eachField: {\n                  useDisplayValue: false\n                },\n                'fields.toggleDisplayValues': {\n                  label: 'Show Display Values',\n                  icon: 'ViewHeadline'\n                }\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      event: 'toggleEditable',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.editable': {\n              $ne: true\n            }\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                editable: true,\n                'fields.toggleEditable': {\n                  label: 'Immutable',\n                  icon: 'NotInterested'\n                }\n              }\n            }\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                editable: false,\n                'fields.toggleEditable': {\n                  label: 'Editable',\n                  icon: 'Edit'\n                }\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      event: 'toggleDisabled',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.disabled': {\n              $ne: true\n            }\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                disabled: true,\n                'fields.toggleDisabled': {\n                  label: 'Enable',\n                  icon: 'LockOpen'\n                }\n              }\n            },\n            {\n              // Renable so we can still click the button\n              component: 'Set',\n              name: 'fields.toggleDisabled.disabled',\n              value: false\n            }\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                disabled: false,\n                'fields.toggleDisabled': {\n                  label: 'Disable',\n                  icon: 'Lock'\n                }\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      event: 'toggleFullWidth',\n      actions: [\n        {\n          component: 'Action',\n          if: {\n            'fields.id.fullWidth': {\n              $ne: true\n            }\n          },\n          actions: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                fullWidth: true,\n                'fields.toggleFullWidth': {\n                  label: 'Flex Width',\n                  icon: 'FormatAlignLeft'\n                }\n              }\n            }\n          ],\n          else: [\n            {\n              component: 'Set',\n              name: 'component',\n              value: {\n                fullWidth: false,\n                'fields.toggleFullWidth': {\n                  label: 'Full Width',\n                  icon: 'FormatAlignLeft'\n                }\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      event: 'log',\n      actions: [\n        {\n          component: 'ConsoleLog',\n          message: '{{value}}'\n        }\n      ]\n    }\n  ]\n};\n","const chainedSelectOptions = [\n  { value: 1, parentValue: null, label: 'Germany' },\n  { value: 2, parentValue: null, label: 'USA' },\n\n  { value: 3, parentValue: 1, label: 'BMW' },\n  { value: 4, parentValue: 1, label: 'Mercedes' },\n\n  { value: 5, parentValue: 2, label: 'Tesla' },\n\n  { value: 6, parentValue: 3, label: 'i3' },\n  { value: 7, parentValue: 3, label: 'i8' },\n  { value: 8, parentValue: 4, label: 'S-Class' },\n\n  { value: 9, parentValue: 5, label: 'Model S' },\n\n  { value: 10, parentValue: 9, label: 'Red' },\n  { value: 11, parentValue: 9, label: 'Blue' }\n];\n\nexport default {\n  name: 'app.Fields',\n  component: 'Form',\n  fields: [\n    {\n      component: 'AddressField',\n      name: 'addressField',\n      label: 'AddressField',\n      help: 'Example help',\n      required: true,\n      elevate: false\n    },\n\n    {\n      component: 'BooleanField',\n      name: 'booleanField',\n      label: 'BooleanField',\n      help: 'Example help'\n    },\n\n    {\n      name: 'buttonField',\n      component: 'ButtonField',\n      label: 'ButtonField',\n      icon: 'Save',\n      type: 'submit',\n      block: true\n    },\n\n    {\n      component: 'ChainedSelectField',\n      name: 'chainedSelectField',\n      label: 'ChainedSel',\n      help: 'Example help',\n      required: true,\n      blankString: 'None',\n      // multiline: true,\n      // fullWidth: true,\n      options: chainedSelectOptions\n    },\n\n    {\n      component: 'ChainedSelectListField',\n      name: 'chainedSelectListField',\n      label: 'ChainSelList',\n      help: 'Example help',\n      required: true,\n      blankString: 'None',\n      // multiline: true,\n      // fullWidth: true,\n      options: chainedSelectOptions\n    },\n\n    {\n      name: 'cityField',\n      component: 'CityField',\n      label: 'CityField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      component: 'CollectionField',\n      name: 'collectionField',\n      label: 'Records',\n      help: 'Example help',\n      required: true,\n      // maxColumns: 1,\n      formFactory: {\n        component: 'Factory',\n        product: {\n          component: 'Form',\n          fields: [\n            {\n              name: 'firstName',\n              component: 'TextField',\n              label: 'First Name',\n              required: true\n            },\n            {\n              name: 'lastName',\n              component: 'TextField',\n              label: 'Last Name'\n            }\n          ]\n        }\n      }\n    },\n\n    {\n      name: 'countryField',\n      component: 'CountryField',\n      label: 'CountryField',\n      help: 'Example help',\n      blankString: 'None',\n      required: true\n    },\n\n    {\n      name: 'dateField',\n      component: 'DateField',\n      label: 'DateField',\n      help: 'Example help',\n      // includeTime: true,\n      minDate: '2018-01-01T23:07:28.157Z',\n      maxDate: '2022-01-01T23:07:28.157Z',\n      required: true\n    },\n\n    {\n      component: 'EmailField',\n      name: 'emailField',\n      label: 'Email',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      component: 'FormField',\n      name: 'formField',\n      label: 'FormField',\n      help: 'Example help',\n      required: true,\n      // elevate: true,\n      form: {\n        component: 'Form',\n        fields: [\n          {\n            name: 'github',\n            component: 'URLField',\n            block: false,\n            label: 'GitHub'\n          },\n          {\n            name: 'medium',\n            component: 'URLField',\n            label: 'Medium'\n          },\n          {\n            name: 'twitter',\n            component: 'URLField',\n            label: 'Twitter'\n          }\n        ]\n      }\n    },\n\n    {\n      name: 'idField',\n      component: 'IdField',\n      label: 'IdField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      name: 'integerField',\n      component: 'IntegerField',\n      label: 'IntegerField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      component: 'ListField',\n      name: 'listFieldEmail',\n      label: 'ListField Email',\n      singularLabel: 'Email',\n      help: 'Example help',\n      required: true,\n      fieldFactory: {\n        component: 'Factory',\n        product: {\n          component: 'EmailField'\n        }\n      }\n    },\n\n    {\n      component: 'ListField',\n      name: 'listFieldName',\n      label: 'ListField Name',\n      singularLabel: 'Name',\n      help: 'Example help',\n      required: true,\n      fieldFactory: {\n        component: 'Factory',\n        product: {\n          component: 'PersonFullNameField'\n        }\n      }\n    },\n\n    {\n      name: 'moneyField',\n      component: 'MoneyField',\n      label: 'MoneyField',\n      help: 'Example help',\n      // prefix: '€',\n      // decimalSymbol: ',',\n      // thousandsSeparatorSymbol: '.',\n      required: true\n    },\n\n    {\n      name: 'numberField',\n      component: 'NumberField',\n      label: 'NumberField',\n      help: 'Example help',\n      // includeThousandsSeparator: true,\n      required: true\n    },\n\n    {\n      name: 'passwordField',\n      component: 'PasswordField',\n      label: 'PasswordField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      name: 'personFullNameField',\n      component: 'PersonFullNameField',\n      label: 'PersonFullNameField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      name: 'personNameField',\n      component: 'PersonNameField',\n      label: 'PersonNameField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      name: 'phoneField',\n      component: 'PhoneField',\n      label: 'PhoneField',\n      help: 'Example help',\n      // defaultMask: '.... ......',\n      required: true\n    },\n\n    {\n      name: 'postalCodeField',\n      component: 'PostalCodeField',\n      label: 'PostalCodeField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      name: 'provinceField',\n      component: 'ProvinceField',\n      label: 'ProvinceField',\n      help: 'Example help',\n      required: true\n    },\n\n    {\n      component: 'ReCAPTCHAField'\n    },\n\n    {\n      name: 'selectField',\n      component: 'SelectField',\n      label: 'SelectField',\n      help: 'Example help',\n      required: true,\n      blankString: 'None',\n      options: [\n        { value: 'red', label: 'Red' },\n        { value: 'green', label: 'Green' },\n        { value: 'blue', label: 'Blue' }\n      ]\n    },\n\n    {\n      name: 'selectFieldMult',\n      component: 'SelectField',\n      label: 'SelFld (mult)',\n      help: 'Example help',\n      required: true,\n      multiple: true,\n      blankString: 'None',\n      // autocomplete: false,\n      options: [\n        { value: 'red', label: 'Red' },\n        { value: 'green', label: 'Green' },\n        { value: 'blue', label: 'Blue' }\n      ]\n    },\n\n    {\n      name: 'selectListField',\n      component: 'SelectListField',\n      label: 'SelListField',\n      help: 'Example help',\n      required: true,\n      blankString: 'None', // Provide a way for the user to delete the entry\n      options: [\n        { value: 'red', label: 'Red' },\n        { value: 'green', label: 'Green' },\n        { value: 'blue', label: 'Blue' }\n      ]\n    },\n\n    {\n      name: 'stateField',\n      component: 'StateField',\n      label: 'StateField',\n      help: 'Example help',\n      blankString: 'None',\n      required: true\n    },\n\n    {\n      name: 'text',\n      component: 'Text',\n      text:\n        '# Text\\nCan contain any [markdown](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)'\n    },\n\n    {\n      name: 'timeField',\n      component: 'TimeField',\n      label: 'TimeField',\n      help: 'Example help',\n      // showSeconds: true,\n      required: true\n    },\n\n    {\n      name: 'textField',\n      component: 'TextField',\n      label: 'TextField',\n      help: 'Example help',\n      // mask: ['(', '/[1-9]/', '/\\\\d/', '/\\\\d/', ')'],\n      // mask: '(...)',\n      required: true\n    },\n\n    {\n      name: 'textListField',\n      component: 'TextListField',\n      label: 'TextListField',\n      help: 'Example help',\n      singularLabel: 'Text Item',\n      required: true\n    },\n\n    {\n      name: 'urlField',\n      component: 'URLField',\n      label: 'URLField',\n      help: 'Example help',\n      // newWindow: true,\n      required: true\n    }\n  ]\n};\n","export default {\n  name: 'app.FormEditor',\n  component: 'Form',\n  fields: [\n    {\n      name: 'fields',\n      component: 'CollectionField',\n      label: 'Fields',\n      hideLabel: true,\n      maxColumns: 1,\n      skipRead: true,\n      includeExtraneous: true,\n      forbidOrder: false,\n      formFactory: {\n        component: 'Factory',\n        product: {\n          component: 'FieldEditorForm'\n        }\n      },\n      store: {\n        component: 'LocalStorageStore',\n        storeName: 'myForm'\n      }\n    }\n  ]\n};\n","export default {\n  name: 'app.Home',\n  component: 'Text',\n  text: '# Welcome\\nCheck out the examples on the left'\n};\n","export default {\n  name: 'app.Tasks',\n  component: 'Form',\n  schema: {\n    component: 'Form',\n    fields: [\n      {\n        name: 'store',\n        component: 'Field'\n      }\n    ]\n  },\n  fields: [\n    {\n      component: 'Text',\n      name: 'header',\n      text: '(drag to reorder)'\n    },\n    {\n      component: 'CollectionField',\n      name: 'tasks',\n      label: 'Tasks',\n      hideLabel: true,\n      // forbidCreate: true,\n      // forbidUpdate: true,\n      // forbidDelete: true,\n      // forbidViewArchived: true,\n      // forbidSearch: true,\n      // forbidSort: true,\n      forbidOrder: false,\n      formFactory: {\n        component: 'Factory',\n        product: {\n          component: 'Form',\n          fields: [\n            {\n              name: 'task',\n              component: 'TextField',\n              label: 'Task',\n              multiline: true,\n              required: true\n            },\n            {\n              name: 'due',\n              component: 'DateField',\n              label: 'Due'\n            }\n          ]\n        }\n      },\n      store: '{{store}}'\n    }\n  ]\n};\n","export default {\n  name: 'app.TasksLocalStorage',\n  component: 'app.Tasks',\n  store: {\n    component: 'LocalStorageStore',\n    storeName: 'tasksLocalStorage'\n  }\n};\n","export default {\n  name: 'app.TasksFirebase',\n  component: 'app.Tasks',\n  store: {\n    component: 'FirebaseStore',\n    apiKey: 'AIzaSyCJfqjdBBrXtwkXla6uMX3LZGOLDAgTEx0',\n    authDomain: 'mson-contacts.firebaseapp.com',\n    projectId: 'mson-contacts',\n    collection: 'tasks'\n  }\n};\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Form from './form';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Field from './fields/field';\nimport compiler from 'mson/lib/compiler';\nimport each from 'lodash/each';\nimport attach from './attach';\n\nconst styles = theme => ({\n  form: {\n    overflowY: 'scroll',\n    maxHeight: 'calc(100vh - 390px)',\n    marginTop: theme.spacing.unit * 3\n  }\n});\n\nclass FieldEditorForm extends React.PureComponent {\n  state = {\n    field: null\n  };\n\n  handleValueChange = value => {\n    const form = this.props.component;\n    let { field } = this.state;\n\n    // Is the field changing?\n    if (!field || value.componentName !== field.getClassName()) {\n      if (field) {\n        // Prevent listener leak\n        field.destroy();\n      }\n\n      if (value.componentName) {\n        field = compiler.newComponent({\n          component: value.componentName\n        });\n\n        // Auto validate so that the user can preview how the validation will work\n        const validate = () => {\n          field.clearErr();\n          field.validate();\n        };\n        field.on('value', validate);\n        field.on('touched', validate);\n      } else {\n        field = null;\n      }\n    }\n\n    if (field) {\n      // Set field values using form values. The corresponding values may not exist if the field was\n      // just changed.\n      const values = form.getValues({ default: false });\n      each(values, (value, name) => {\n        if (field.has(name)) {\n          field.set({ [name]: value });\n        }\n      });\n    }\n\n    this.setState({ field });\n  };\n\n  componentDidMount() {\n    // Note: we use a listener on value instead of attaching to value as a shallow compare of value\n    // would not trigger a state change.\n    this.props.component.on('value', this.handleValueChange);\n\n    // Initialize with the current value\n    this.handleValueChange(this.props.component.getValues());\n  }\n\n  componentWillUnmount() {\n    this.props.component.removeListener('value', this.handleValueChange);\n  }\n\n  render() {\n    const { component, classes, formTag, mode } = this.props;\n    const { field } = this.state;\n\n    let preview = null;\n    if (field && mode !== 'read') {\n      preview = (\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Preview\n            </Typography>\n            <Field component={field} />\n          </CardContent>\n        </Card>\n      );\n    }\n\n    if (mode !== 'read') {\n      return (\n        <React.Fragment>\n          <div className={classes.preview}>{preview}</div>\n          <div className={classes.form}>\n            <Form component={component} formTag={formTag} mode={mode} />\n          </div>\n        </React.Fragment>\n      );\n    } else if (field) {\n      // Disable so that the user can edit the field with a click\n      return <Field component={field} disabled={true} />;\n    } else {\n      return null;\n    }\n  }\n}\n\nFieldEditorForm = withStyles(styles)(FieldEditorForm);\nFieldEditorForm = attach(['mode'])(FieldEditorForm);\n\nexport default FieldEditorForm;\n","import compiler from 'mson/lib/compiler';\nimport * as components from './components';\nimport globals from 'mson/lib/globals';\nimport uiComponents from '../components';\nimport FieldEditorForm from 'mson/lib/form/field-editor-form';\nimport FieldEditorFormUI from '../field-editor-form';\n\n// Set the site key when using the ReCAPTCHAField\nglobals.set({ reCAPTCHASiteKey: '6LdIbGMUAAAAAJnipR9t-SnWzCbn0ZX2myXBIauh' });\n\n// Register optional core components\ncompiler.registerComponent('FieldEditorForm', FieldEditorForm);\nuiComponents.FieldEditorForm = FieldEditorFormUI;\n\n// Register all the components\nfor (let name in components) {\n  let component = components[name];\n  compiler.registerComponent(component.name, component);\n}\n\n// Instantiate the app\nconst app = compiler.newComponent({\n  component: 'app.App'\n});\n\nexport default app;\n","import { render } from '../bundle';\nimport 'typeface-roboto';\nimport app from './app';\n\n// Render the app\nrender(app);\n"],"sourceRoot":""}